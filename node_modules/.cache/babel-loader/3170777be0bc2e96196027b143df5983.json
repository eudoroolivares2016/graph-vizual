{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/components/NetworkGraph/NetworkGraphComponent.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport vis from 'vis-network';\nimport { ACTIONS } from '../../constants';\nfunction NetworkGraph(props) {\n  // componentDidMount() {\n  //   const data = {\n  //     nodes: props.nodeHolder,\n  //     edges: props.edgeHolder\n  //   };\n  // useEffect(() => {\n  //   const data = {\n  //     nodes: props.nodeHolder,\n  //     edges: props.edgeHolder\n  //   }\n  //  }, [])\n\n  const network = new vis.Network(refs.myRef, data, props.networkOptions);\n  // If you select the node\n  network.on('selectNode', params => {\n    const nodeId = params.nodes && params.nodes.length > 0 ? params.nodes[0] : null;\n    props.dispatch({\n      type: ACTIONS.SET_SELECTED_NODE,\n      payload: nodeId\n    });\n  });\n  // If you select the edge\n  network.on(\"selectEdge\", params => {\n    const edgeId = params.edges && params.edges.length === 1 ? params.edges[0] : null;\n    const isNodeSelected = params.nodes && params.nodes.length > 0;\n    if (!isNodeSelected && edgeId !== null) {\n      props.dispatch({\n        type: ACTIONS.SET_SELECTED_EDGE,\n        payload: edgeId\n      });\n    }\n  });\n  props.dispatch({\n    type: ACTIONS.SET_NETWORK,\n    payload: network\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: 'myRef',\n    className: 'mynetwork',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  });\n}\nexport const NetworkGraphComponent = connect(state => {\n  return {\n    nodeHolder: state.graph.nodeHolder,\n    edgeHolder: state.graph.edgeHolder,\n    networkOptions: state.options.networkOptions\n  };\n})(NetworkGraph);","map":{"version":3,"names":["React","useEffect","connect","vis","ACTIONS","NetworkGraph","props","network","Network","refs","myRef","data","networkOptions","on","params","nodeId","nodes","length","dispatch","type","SET_SELECTED_NODE","payload","edgeId","edges","isNodeSelected","SET_SELECTED_EDGE","SET_NETWORK","NetworkGraphComponent","state","nodeHolder","graph","edgeHolder","options"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/components/NetworkGraph/NetworkGraphComponent.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\nimport vis from 'vis-network';\nimport { ACTIONS } from '../../constants';\n\nfunction NetworkGraph (props) {\n  // componentDidMount() {\n  //   const data = {\n  //     nodes: props.nodeHolder,\n  //     edges: props.edgeHolder\n  //   };\n    // useEffect(() => {\n    //   const data = {\n    //     nodes: props.nodeHolder,\n    //     edges: props.edgeHolder\n    //   }\n    //  }, [])\n    \n    const network = new vis.Network(refs.myRef, data, props.networkOptions);\n    // If you select the node\n    network.on('selectNode', (params) => {\n      const nodeId = params.nodes && params.nodes.length > 0 ? params.nodes[0] : null;\n      props.dispatch({ type: ACTIONS.SET_SELECTED_NODE, payload: nodeId });\n    });\n    // If you select the edge\n    network.on(\"selectEdge\", (params) => {\n      const edgeId = params.edges && params.edges.length === 1 ? params.edges[0] : null;\n      const isNodeSelected = params.nodes && params.nodes.length > 0;\n      if (!isNodeSelected && edgeId !== null) {\n        props.dispatch({ type: ACTIONS.SET_SELECTED_EDGE, payload: edgeId });\n      }\n    });\n\n    props.dispatch({ type: ACTIONS.SET_NETWORK, payload: network });\n    return (<div ref={'myRef'} className={'mynetwork'} />);\n\n}\n\nexport const NetworkGraphComponent = connect((state)=>{\n  return {\n    nodeHolder: state.graph.nodeHolder,\n    edgeHolder: state.graph.edgeHolder,\n    networkOptions: state.options.networkOptions\n  };\n})(NetworkGraph);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAAQC,OAAO,QAAO,aAAa;AACnC,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,SAASC,YAAY,CAAEC,KAAK,EAAE;EAC5B;EACA;EACA;EACA;EACA;EACE;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,OAAO,GAAG,IAAIJ,GAAG,CAACK,OAAO,CAACC,IAAI,CAACC,KAAK,EAAEC,IAAI,EAAEL,KAAK,CAACM,cAAc,CAAC;EACvE;EACAL,OAAO,CAACM,EAAE,CAAC,YAAY,EAAGC,MAAM,IAAK;IACnC,MAAMC,MAAM,GAAGD,MAAM,CAACE,KAAK,IAAIF,MAAM,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,GAAGH,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;IAC/EV,KAAK,CAACY,QAAQ,CAAC;MAAEC,IAAI,EAAEf,OAAO,CAACgB,iBAAiB;MAAEC,OAAO,EAAEN;IAAO,CAAC,CAAC;EACtE,CAAC,CAAC;EACF;EACAR,OAAO,CAACM,EAAE,CAAC,YAAY,EAAGC,MAAM,IAAK;IACnC,MAAMQ,MAAM,GAAGR,MAAM,CAACS,KAAK,IAAIT,MAAM,CAACS,KAAK,CAACN,MAAM,KAAK,CAAC,GAAGH,MAAM,CAACS,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;IACjF,MAAMC,cAAc,GAAGV,MAAM,CAACE,KAAK,IAAIF,MAAM,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC;IAC9D,IAAI,CAACO,cAAc,IAAIF,MAAM,KAAK,IAAI,EAAE;MACtChB,KAAK,CAACY,QAAQ,CAAC;QAAEC,IAAI,EAAEf,OAAO,CAACqB,iBAAiB;QAAEJ,OAAO,EAAEC;MAAO,CAAC,CAAC;IACtE;EACF,CAAC,CAAC;EAEFhB,KAAK,CAACY,QAAQ,CAAC;IAAEC,IAAI,EAAEf,OAAO,CAACsB,WAAW;IAAEL,OAAO,EAAEd;EAAQ,CAAC,CAAC;EAC/D,oBAAQ;IAAK,GAAG,EAAE,OAAQ;IAAC,SAAS,EAAE,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;AAEzD;AAEA,OAAO,MAAMoB,qBAAqB,GAAGzB,OAAO,CAAE0B,KAAK,IAAG;EACpD,OAAO;IACLC,UAAU,EAAED,KAAK,CAACE,KAAK,CAACD,UAAU;IAClCE,UAAU,EAAEH,KAAK,CAACE,KAAK,CAACC,UAAU;IAClCnB,cAAc,EAAEgB,KAAK,CAACI,OAAO,CAACpB;EAChC,CAAC;AACH,CAAC,CAAC,CAACP,YAAY,CAAC"},"metadata":{},"sourceType":"module"}