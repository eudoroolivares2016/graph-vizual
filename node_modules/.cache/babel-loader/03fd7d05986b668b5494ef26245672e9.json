{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar React = require(\"react\");\nrequire(\"./JsonToTable.css\");\nvar JsonToTableUtils_1 = require(\"./JsonToTableUtils\");\nvar JsonToTableUtils_2 = require(\"./JsonToTableUtils\");\nvar JsonToTable = /** @class */function (_super) {\n  __extends(JsonToTable, _super);\n  // constructor\n  function JsonToTable(props, context) {\n    var _this = _super.call(this, props, context) || this;\n    _this.renderObject = function (obj, header, idx) {\n      var phrase = [];\n      var tmp;\n      if (header) {\n        phrase.push(_this.renderRowHeader(header));\n      }\n      var objType = JsonToTableUtils_2.default.getObjectType(obj);\n      switch (objType) {\n        case JsonToTableUtils_1.JSONObjectType.ObjectWithNonNumericKeys:\n          tmp = header ? React.createElement(\"table\", {\n            key: \"__j2t_tableObj\" + idx\n          }, React.createElement(\"tbody\", {\n            key: \"__j2t_bObj\" + idx\n          }, _this.renderRows(obj))) : _this.renderRows(obj);\n          break;\n        case JsonToTableUtils_1.JSONObjectType.Array:\n          tmp = header ? React.createElement(\"table\", {\n            key: \"__j2t_tableArr\" + idx\n          }, React.createElement(\"tbody\", {\n            key: \"__j2t_bArr\" + idx\n          }, _this.parseArray(obj))) : _this.parseArray(obj);\n          break;\n      }\n      phrase.push(tmp);\n      var retval = phrase.map(function (p) {\n        return p;\n      });\n      return header ? React.createElement(\"tr\", {\n        key: \"__j2t_trObj\" + idx\n      }, _this.renderCell({\n        content: retval,\n        colspan: 2\n      })) : retval;\n    };\n    _this.renderCell = function (params) {\n      var content = params.content,\n        colspan = params.colspan,\n        isHeader = params.isHeader;\n      var valueDisplay = isHeader ? React.createElement(\"strong\", null, content) : content;\n      return React.createElement(\"td\", {\n        colSpan: colspan ? colspan : 0,\n        key: \"__j2t_trObj\" + valueDisplay\n      }, valueDisplay);\n    };\n    _this.renderHeader = function (labels) {\n      return React.createElement(\"tr\", {\n        key: \"__j2t_trHeader\"\n      }, labels.map(function (v) {\n        return _this.renderCell({\n          content: v\n        });\n      }));\n    };\n    _this.renderValues = function (values) {\n      return React.createElement(\"tr\", {\n        key: \"__j2t_trArrString\"\n      }, values.map(function (k) {\n        return _this.renderCell({\n          content: k\n        });\n      }));\n    };\n    _this.renderRowValues = function (anArray, labels) {\n      return anArray.map(function (item, idx) {\n        return React.createElement(\"tr\", {\n          key: \"__j2t_Arr\" + idx.toString()\n        }, labels.map(function (k) {\n          var isValuePrimitive = JsonToTableUtils_2.default.getObjectType(item[k]) === JsonToTableUtils_1.JSONObjectType.Primitive;\n          return isValuePrimitive ? _this.renderCell({\n            content: item[k]\n          }) : _this.renderObject(item[k], k, idx);\n        }));\n      });\n    };\n    _this.parseArray = function (anArray) {\n      var phrase = [];\n      var labels = JsonToTableUtils_2.default.getUniqueObjectKeys(anArray);\n      if (JsonToTableUtils_2.default.checkLabelTypes(labels.labels) !== \"number\") {\n        phrase.push(_this.renderHeader(labels.labels));\n        phrase.push(_this.renderRowValues(anArray, labels.labels));\n      } else {\n        phrase.push(_this.renderValues(anArray));\n      }\n      return phrase;\n    };\n    _this.renderRow = function (k, v, idx) {\n      return React.createElement(\"tr\", {\n        key: \"__j2t_tr\" + idx\n      }, React.createElement(\"td\", {\n        key: \"__j2t_tdk\" + idx\n      }, React.createElement(\"strong\", null, k)), React.createElement(\"td\", {\n        key: \"__j2t_tdv\" + idx\n      }, v));\n    };\n    _this.renderRowHeader = function (label) {\n      return React.createElement(\"div\", {\n        key: \"__j2t_rw\" + label\n      }, React.createElement(\"strong\", null, label));\n    };\n    _this.renderRows = function (obj, labelKey) {\n      return Object.keys(obj).map(function (k, idx) {\n        var value = obj[k];\n        var isValuePrimitive = JsonToTableUtils_2.default.getObjectType(value) === JsonToTableUtils_1.JSONObjectType.Primitive;\n        // render row when value is primitive otherwise inspect the value and make the key as header\n        var retval = isValuePrimitive ? _this.renderRow(k, value, idx) : _this.renderObject(value, k, idx);\n        return retval;\n      });\n    };\n    return _this;\n  }\n  JsonToTable.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: 'json-to-table'\n    }, React.createElement(\"table\", {\n      key: \"__j2t_root_table\"\n    }, React.createElement(\"tbody\", {\n      key: \"__j2t_root_tbody\"\n    }, this.renderObject(this.props.json, undefined, 0))));\n  };\n  return JsonToTable;\n}(React.Component);\nexports.default = JsonToTable;","map":{"version":3,"mappings":"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","names":["require","__extends","props","context","_super","_this","obj","header","idx","phrase","tmp","push","renderRowHeader","objType","JsonToTableUtils_2","getObjectType","JsonToTableUtils_1","ObjectWithNonNumericKeys","React","key","renderRows","Array","parseArray","retval","map","renderCell","content","colspan","params","isHeader","valueDisplay","colSpan","labels","v","values","k","anArray","item","toString","isValuePrimitive","Primitive","renderObject","getUniqueObjectKeys","checkLabelTypes","renderHeader","renderRowValues","renderValues","label","labelKey","Object","keys","value","renderRow","JsonToTable","className","json","undefined","Component"],"sourceRoot":"","sources":["../../../../src/components/JsonToTable/JsonToTable.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}