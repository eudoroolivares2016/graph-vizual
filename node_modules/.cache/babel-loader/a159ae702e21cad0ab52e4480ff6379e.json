{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/components/NetworkField/NetworkField.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport vis from 'vis-network';\nimport { ACTIONS } from '../../constants';\nimport Graph from \"react-vis-network-graph\";\nimport { useState } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nexport const NetworkField = _ref => {\n  let {\n    response,\n    changeGraph\n  } = _ref;\n  const counter = useSelector(state => state.counter);\n  const options = {\n    layout: {\n      hierarchical: true\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    height: \"500px\"\n  };\n  const events = {\n    select: function (event) {\n      var {\n        nodes,\n        edges\n      } = event;\n    },\n    doubleClick: _ref2 => {\n      let {\n        pointer: {\n          canvas\n        }\n      } = _ref2;\n      console.log('double clicked on the canvas');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    graph: changeGraph,\n    options: options,\n    events: events,\n    getNetwork: network => {\n      //  if you want access to vis.js network api you can set the state in a parent component using this property\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }\n  }));\n};\nexport default NetworkField;","map":{"version":3,"names":["React","connect","vis","ACTIONS","Graph","useState","shallowEqual","useSelector","NetworkField","response","changeGraph","counter","state","options","layout","hierarchical","edges","color","height","events","select","event","nodes","doubleClick","pointer","canvas","console","log","network"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/components/NetworkField/NetworkField.js"],"sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux';\nimport vis from 'vis-network';\nimport { ACTIONS } from '../../constants';\nimport Graph from \"react-vis-network-graph\";\nimport  {useState} from 'react'\nimport { shallowEqual, useSelector } from 'react-redux'\nexport const NetworkField = ({response, changeGraph}) => {\n  \n  const counter = useSelector(state => state.counter)\n\n  const options = {\n    layout: {\n      hierarchical: true\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    height: \"500px\"\n  }\n\n  const events = {\n    select: function(event) {\n      var { nodes, edges } = event},\n      doubleClick: ({ pointer: { canvas } }) => {\n        console.log('double clicked on the canvas')\n      }\n    }\n \nreturn (\n<div>\n<Graph\n  graph={changeGraph}\n  options={options}\n  events={events} getNetwork={network => {\n    //  if you want access to vis.js network api you can set the state in a parent component using this property\n  }}>\n    \n  </Graph>\n</div>\n)\n}\nexport default NetworkField\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAO,aAAa;AACnC,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,SAASC,QAAQ,QAAO,OAAO;AAC/B,SAASC,YAAY,EAAEC,WAAW,QAAQ,aAAa;AACvD,OAAO,MAAMC,YAAY,GAAG,QAA6B;EAAA,IAA5B;IAACC,QAAQ;IAAEC;EAAW,CAAC;EAElD,MAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,OAAO,CAAC;EAEnD,MAAME,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,YAAY,EAAE;IAChB,CAAC;IACDC,KAAK,EAAE;MACLC,KAAK,EAAE;IACT,CAAC;IACDC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,MAAM,GAAG;IACbC,MAAM,EAAE,UAASC,KAAK,EAAE;MACtB,IAAI;QAAEC,KAAK;QAAEN;MAAM,CAAC,GAAGK,KAAK;IAAA,CAAC;IAC7BE,WAAW,EAAE,SAA6B;MAAA,IAA5B;QAAEC,OAAO,EAAE;UAAEC;QAAO;MAAE,CAAC;MACnCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C;EACF,CAAC;EAEL,oBACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,KAAK;IACJ,KAAK,EAAEjB,WAAY;IACnB,OAAO,EAAEG,OAAQ;IACjB,MAAM,EAAEM,MAAO;IAAC,UAAU,EAAES,OAAO,IAAI;MACrC;IAAA,CACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEM,CACJ;AAEN,CAAC;AACD,eAAepB,YAAY"},"metadata":{},"sourceType":"module"}