{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/App.js\";\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { NetworkGraphComponent } from './components/NetworkGraph/NetworkGraphComponent';\nimport { HeaderComponent } from './components/Header/HeaderComponent';\nimport { DetailsComponent } from './components/Details/DetailsComponent';\nimport Graph from \"react-vis-network-graph\";\nimport { useState } from \"react\";\nimport vis from 'vis-network';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { ACTIONS, QUERY_ENDPOINT, COMMON_GREMLIN_ERROR } from 'constants';\nimport axios from 'axios';\nimport { onFetchQuery } from './logics/actionHelper';\nimport gremlinReduce from './reducers/gremlinReducer';\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HeaderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NetworkGraphComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DetailsComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }))));\n}\n\n// function App() {\n//   const graph = {\n//     nodes: [\n//       { id: 1, label: 'node', title: \"node 1 tootip text\" },\n//       { id: 2, label: 'node', title: \"node 2 tootip text\" },\n//       { id: 3, label: 'node', title: \"node 3 tootip text\" },\n//       { id: 4, label: 'node', title: \"node 4 tootip text\" },\n//       { id: 5, label: 'node', title: \"node 5 tootip text\" }\n//     ],\n//     edges: [\n//       { from: 1, to: 2, label: 'edge'},\n//       { from: 1, to: 3, label: 'edge' },\n//       { from: 2, to: 4, label: 'edge' },\n//       { from: 2, to: 5, label: 'edge' }\n//     ]\n//   }\n\n//   const [curHead, changeState] = useState(\"Graph Viz\");\n//   const [currPort, changePort] = useState(\"8182\");\n//   const [currHost, changeHost] = useState(\"localhost\");\n//   const [currQuery, changeQuery] = useState(\"g.V()\");\n//   const [currGraph, changeGraph]= useState(graph);\n\n//   const changeHeader = () => {\n//     changeState(\"noon\")\n//   }\n//       // function sendQuery(host, port, query) {\n//       //   // this.props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n//       //   axios.post(\n//       //     QUERY_ENDPOINT,\n//       //     { host: host, port: port, query: query, nodeLimit: 4 },\n//       //     { headers: { 'Content-Type': 'application/json' } }\n//       //   ).then((response) => {\n//       //       // console.log(response)\n//       //       onFetchQuery(response, query, [])\n//       //   }).catch((error) => {\n//       //   //   this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n//       //   // TODO: Handle the error condition maybe some warning    \n//       //   console.log(error)\n//       //   });\n//       // }\n\n//   const changeGraphValue = (crgraph) =>\n//   {\n//     //TODO Add the values that we get from the gremlin query parsed into this part\n//   }\n//   // let network = new vis.Network\n\n//   // const updatePortValue = (newPort) => {\n//   //   changePort(newPort)\n//   // }\n\n//   // function changeHeader(){\n//   //   changePort(\"noon\")\n//   // }\n//   // function changeHeader(){\n//   //   changeHost(\"noon\")\n//   // }\n//   // function changeHeader(){\n//   //   changeQuery(\"noon\")\n//   // }\n//     return (\n//       <div>\n//         <HeaderComp port={currPort} host={currHost} query={currQuery} changePort= {(newPort) => changePort(newPort.target.value)}\n//         changeHost= {(newHost) => changeHost(newHost.target.value)}\n//         changeQuery= {(newQuery) => changeQuery(newQuery.target.value)}/>\n//         <NetworkField changeGraph={currGraph}/>\n\n//         {/* { <Grid container spacing={1}>\n//           <Grid item xs={12} sm={12} md={12\n//           }>\n//             <HeaderComponent />\n//           </Grid>\n//           <Grid item xs={12} sm={9} md={9}>\n//             <NetworkGraphComponent />\n//           </Grid>\n//           <Grid item xs={12} sm={3} md={3}>\n//             <DetailsComponent />\n//           </Grid>\n//         </Grid> } */}\n\n//       </div>\n//       );\n//  }\n// export default App","map":{"version":3,"names":["React","Grid","NetworkGraphComponent","HeaderComponent","DetailsComponent","Graph","useState","vis","shallowEqual","useSelector","ACTIONS","QUERY_ENDPOINT","COMMON_GREMLIN_ERROR","axios","onFetchQuery","gremlinReduce","App"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Grid }  from '@material-ui/core';\nimport { NetworkGraphComponent } from './components/NetworkGraph/NetworkGraphComponent';\nimport { HeaderComponent } from './components/Header/HeaderComponent';\nimport { DetailsComponent } from './components/Details/DetailsComponent';\nimport Graph from \"react-vis-network-graph\";\nimport { useState } from \"react\"\nimport vis from 'vis-network';\nimport { shallowEqual, useSelector } from 'react-redux'\nimport { ACTIONS, QUERY_ENDPOINT, COMMON_GREMLIN_ERROR } from 'constants';\nimport axios from 'axios';\nimport { onFetchQuery } from './logics/actionHelper';\nimport gremlinReduce from './reducers/gremlinReducer'\n\nfunction App (){\n    return (\n      <div>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={12} md={12}>\n            <HeaderComponent />\n          </Grid>\n          <Grid item xs={12} sm={9} md={9}>\n            <NetworkGraphComponent />\n          </Grid>\n          <Grid item xs={12} sm={3} md={3}>\n            <DetailsComponent />\n          </Grid>\n        </Grid>\n\n      </div>\n      );\n}\n\n\n// function App() {\n//   const graph = {\n//     nodes: [\n//       { id: 1, label: 'node', title: \"node 1 tootip text\" },\n//       { id: 2, label: 'node', title: \"node 2 tootip text\" },\n//       { id: 3, label: 'node', title: \"node 3 tootip text\" },\n//       { id: 4, label: 'node', title: \"node 4 tootip text\" },\n//       { id: 5, label: 'node', title: \"node 5 tootip text\" }\n//     ],\n//     edges: [\n//       { from: 1, to: 2, label: 'edge'},\n//       { from: 1, to: 3, label: 'edge' },\n//       { from: 2, to: 4, label: 'edge' },\n//       { from: 2, to: 5, label: 'edge' }\n//     ]\n//   }\n  \n//   const [curHead, changeState] = useState(\"Graph Viz\");\n//   const [currPort, changePort] = useState(\"8182\");\n//   const [currHost, changeHost] = useState(\"localhost\");\n//   const [currQuery, changeQuery] = useState(\"g.V()\");\n//   const [currGraph, changeGraph]= useState(graph);\n  \n//   const changeHeader = () => {\n//     changeState(\"noon\")\n//   }\n//       // function sendQuery(host, port, query) {\n//       //   // this.props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n//       //   axios.post(\n//       //     QUERY_ENDPOINT,\n//       //     { host: host, port: port, query: query, nodeLimit: 4 },\n//       //     { headers: { 'Content-Type': 'application/json' } }\n//       //   ).then((response) => {\n//       //       // console.log(response)\n//       //       onFetchQuery(response, query, [])\n//       //   }).catch((error) => {\n//       //   //   this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n//       //   // TODO: Handle the error condition maybe some warning    \n//       //   console.log(error)\n//       //   });\n//       // }\n\n//   const changeGraphValue = (crgraph) =>\n//   {\n//     //TODO Add the values that we get from the gremlin query parsed into this part\n//   }\n//   // let network = new vis.Network\n\n//   // const updatePortValue = (newPort) => {\n//   //   changePort(newPort)\n//   // }\n\n//   // function changeHeader(){\n//   //   changePort(\"noon\")\n//   // }\n//   // function changeHeader(){\n//   //   changeHost(\"noon\")\n//   // }\n//   // function changeHeader(){\n//   //   changeQuery(\"noon\")\n//   // }\n//     return (\n//       <div>\n//         <HeaderComp port={currPort} host={currHost} query={currQuery} changePort= {(newPort) => changePort(newPort.target.value)}\n//         changeHost= {(newHost) => changeHost(newHost.target.value)}\n//         changeQuery= {(newQuery) => changeQuery(newQuery.target.value)}/>\n//         <NetworkField changeGraph={currGraph}/>\n\n//         {/* { <Grid container spacing={1}>\n//           <Grid item xs={12} sm={12} md={12\n//           }>\n//             <HeaderComponent />\n//           </Grid>\n//           <Grid item xs={12} sm={9} md={9}>\n//             <NetworkGraphComponent />\n//           </Grid>\n//           <Grid item xs={12} sm={3} md={3}>\n//             <DetailsComponent />\n//           </Grid>\n//         </Grid> } */}\n\n//       </div>\n//       );\n//  }\n// export default App\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAS,mBAAmB;AACzC,SAASC,qBAAqB,QAAQ,iDAAiD;AACvF,SAASC,eAAe,QAAQ,qCAAqC;AACrE,SAASC,gBAAgB,QAAQ,uCAAuC;AACxE,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,YAAY,EAAEC,WAAW,QAAQ,aAAa;AACvD,SAASC,OAAO,EAAEC,cAAc,EAAEC,oBAAoB,QAAQ,WAAW;AACzE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,aAAa,MAAM,2BAA2B;AAErD,SAASC,GAAG,GAAG;EACX,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,IAAI;IAAC,SAAS;IAAC,OAAO,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzB,oBAAC,IAAI;IAAC,IAAI;IAAC,EAAE,EAAE,EAAG;IAAC,EAAE,EAAE,EAAG;IAAC,EAAE,EAAE,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChC,oBAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACd,eACP,oBAAC,IAAI;IAAC,IAAI;IAAC,EAAE,EAAE,EAAG;IAAC,EAAE,EAAE,CAAE;IAAC,EAAE,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC9B,oBAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACpB,eACP,oBAAC,IAAI;IAAC,IAAI;IAAC,EAAE,EAAE,EAAG;IAAC,EAAE,EAAE,CAAE;IAAC,EAAE,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC9B,oBAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACf,CACF,CAEH;AAEZ;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}