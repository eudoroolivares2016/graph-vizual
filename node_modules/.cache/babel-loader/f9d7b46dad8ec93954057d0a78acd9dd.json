{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore, combineReducers, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { Provider } from 'react-redux';\nimport { reducer as gremlinReducer } from './reducers/gremlinReducer';\nimport { reducer as graphReducer } from './reducers/graphReducer';\nimport { reducer as optionReducer } from './reducers/optionReducer';\nimport App from './App';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  gremlin: gremlinReducer,\n  graph: graphReducer,\n  options: optionReducer\n});\n// TODO This is being deprecated? So we should use the wrapper configureStore\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(createLogger())));\n\n// const store2 = configureStore()\n\n//6. Render react element\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }\n}, \" \", /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 42\n  }\n})), document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","applyMiddleware","createStore","combineReducers","compose","createLogger","Provider","reducer","gremlinReducer","graphReducer","optionReducer","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","gremlin","graph","options","store","render","document","getElementById"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore, combineReducers, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { Provider } from 'react-redux';\n\nimport { reducer as gremlinReducer } from './reducers/gremlinReducer';\nimport { reducer as graphReducer } from './reducers/graphReducer';\nimport { reducer as optionReducer } from './reducers/optionReducer';\nimport App from './App';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({ gremlin: gremlinReducer, graph: graphReducer, options: optionReducer });\n// TODO This is being deprecated? So we should use the wrapper configureStore\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(createLogger()))\n);\n\n// const store2 = configureStore()\n\n//6. Render react element\nReactDOM.render(<Provider store={store}> <App /></Provider>, document.getElementById('root'));\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,eAAe,EAAEC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,QAAQ,QAAQ,aAAa;AAEtC,SAASC,OAAO,IAAIC,cAAc,QAAQ,2BAA2B;AACrE,SAASD,OAAO,IAAIE,YAAY,QAAQ,yBAAyB;AACjE,SAASF,OAAO,IAAIG,aAAa,QAAQ,0BAA0B;AACnE,OAAOC,GAAG,MAAM,OAAO;AAEvB,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAoC,IAAIV,OAAO;AAC/E,MAAMW,WAAW,GAAGZ,eAAe,CAAC;EAAEa,OAAO,EAAER,cAAc;EAAES,KAAK,EAAER,YAAY;EAAES,OAAO,EAAER;AAAc,CAAC,CAAC;AAC7G;AACA,MAAMS,KAAK,GAAGjB,WAAW,CACvBa,WAAW,EACXH,gBAAgB,CAACX,eAAe,CAACI,YAAY,EAAE,CAAC,CAAC,CAClD;;AAED;;AAEA;AACAL,QAAQ,CAACoB,MAAM,eAAC,oBAAC,QAAQ;EAAC,KAAK,EAAED,KAAM;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAAC,GAAC,mCAAC,GAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAAG,CAAW,EAAEE,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module"}