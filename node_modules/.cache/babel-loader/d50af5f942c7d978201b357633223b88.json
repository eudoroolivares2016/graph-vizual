{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/components/NetworkField/NetworkField.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport vis from 'vis-network';\nimport { ACTIONS } from '../../constants';\nimport Graph from \"react-vis-network-graph\";\nexport const NetworkField = _ref => {\n  let {\n    response\n  } = _ref;\n  const graph = {\n    nodes: [{\n      id: 1,\n      label: response,\n      title: \"node 1 tootip text\"\n    }, {\n      id: 2,\n      label: response,\n      title: \"node 2 tootip text\"\n    }, {\n      id: 3,\n      label: response,\n      title: \"node 3 tootip text\"\n    }, {\n      id: 4,\n      label: response,\n      title: \"node 4 tootip text\"\n    }, {\n      id: 5,\n      label: response,\n      title: \"node 5 tootip text\"\n    }],\n    edges: [{\n      from: 1,\n      to: 2,\n      label: response\n    }, {\n      from: 1,\n      to: 3\n    }, {\n      from: 2,\n      to: 4\n    }, {\n      from: 2,\n      to: 5\n    }]\n  };\n  const options = {\n    layout: {\n      hierarchical: true\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    height: \"500px\"\n  };\n  const events = {\n    select: function (event) {\n      var {\n        nodes,\n        edges\n      } = event;\n    },\n    doubleClick: _ref2 => {\n      let {\n        pointer: {\n          canvas\n        }\n      } = _ref2;\n      createNode(canvas.x, canvas.y);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    graph: graph,\n    options: options,\n    events: events,\n    getNetwork: network => {\n      //  if you want access to vis.js network api you can set the state in a parent component using this property\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }\n  }));\n};\nexport default NetworkField;","map":{"version":3,"names":["React","connect","vis","ACTIONS","Graph","NetworkField","response","graph","nodes","id","label","title","edges","from","to","options","layout","hierarchical","color","height","events","select","event","doubleClick","pointer","canvas","createNode","x","y","network"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/components/NetworkField/NetworkField.js"],"sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux';\nimport vis from 'vis-network';\nimport { ACTIONS } from '../../constants';\nimport Graph from \"react-vis-network-graph\";\n\nexport const NetworkField = ({response}) => {\n\n  const graph = {\n    nodes: [\n      { id: 1, label: response, title: \"node 1 tootip text\" },\n      { id: 2, label: response, title: \"node 2 tootip text\" },\n      { id: 3, label: response, title: \"node 3 tootip text\" },\n      { id: 4, label: response, title: \"node 4 tootip text\" },\n      { id: 5, label: response, title: \"node 5 tootip text\" }\n    ],\n    edges: [\n      { from: 1, to: 2, label: response},\n      { from: 1, to: 3 },\n      { from: 2, to: 4 },\n      { from: 2, to: 5 }\n    ]\n  }\n  const options = {\n    layout: {\n      hierarchical: true\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    height: \"500px\"\n  }\n\n  const events = {\n    select: function(event) {\n      var { nodes, edges } = event},\n      doubleClick: ({ pointer: { canvas } }) => {\n        createNode(canvas.x, canvas.y)\n      }\n    }\n \nreturn (\n<div>\n<Graph\n  graph={graph}\n  options={options}\n  events={events} getNetwork={network => {\n    //  if you want access to vis.js network api you can set the state in a parent component using this property\n  }}>\n    \n  </Graph>\n</div>\n)\n}\nexport default NetworkField\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAO,aAAa;AACnC,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,KAAK,MAAM,yBAAyB;AAE3C,OAAO,MAAMC,YAAY,GAAG,QAAgB;EAAA,IAAf;IAACC;EAAQ,CAAC;EAErC,MAAMC,KAAK,GAAG;IACZC,KAAK,EAAE,CACL;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAEJ,QAAQ;MAAEK,KAAK,EAAE;IAAqB,CAAC,EACvD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAEJ,QAAQ;MAAEK,KAAK,EAAE;IAAqB,CAAC,EACvD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAEJ,QAAQ;MAAEK,KAAK,EAAE;IAAqB,CAAC,EACvD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAEJ,QAAQ;MAAEK,KAAK,EAAE;IAAqB,CAAC,EACvD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAEJ,QAAQ;MAAEK,KAAK,EAAE;IAAqB,CAAC,CACxD;IACDC,KAAK,EAAE,CACL;MAAEC,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEJ,KAAK,EAAEJ;IAAQ,CAAC,EAClC;MAAEO,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC;EAEtB,CAAC;EACD,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,YAAY,EAAE;IAChB,CAAC;IACDL,KAAK,EAAE;MACLM,KAAK,EAAE;IACT,CAAC;IACDC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,MAAM,GAAG;IACbC,MAAM,EAAE,UAASC,KAAK,EAAE;MACtB,IAAI;QAAEd,KAAK;QAAEI;MAAM,CAAC,GAAGU,KAAK;IAAA,CAAC;IAC7BC,WAAW,EAAE,SAA6B;MAAA,IAA5B;QAAEC,OAAO,EAAE;UAAEC;QAAO;MAAE,CAAC;MACnCC,UAAU,CAACD,MAAM,CAACE,CAAC,EAAEF,MAAM,CAACG,CAAC,CAAC;IAChC;EACF,CAAC;EAEL,oBACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,KAAK;IACJ,KAAK,EAAErB,KAAM;IACb,OAAO,EAAEQ,OAAQ;IACjB,MAAM,EAAEK,MAAO;IAAC,UAAU,EAAES,OAAO,IAAI;MACrC;IAAA,CACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEM,CACJ;AAEN,CAAC;AACD,eAAexB,YAAY"},"metadata":{},"sourceType":"module"}