{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/components/Details/DetailsComponent.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, List, ListItem, ListItemText, TextField, Fab, IconButton, Grid, Table, TableBody, TableRow, TableCell, FormControlLabel, Switch, Divider, Tooltip } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport _ from 'lodash';\nimport { JsonToTable } from 'react-json-to-table';\nimport { ACTIONS, COMMON_GREMLIN_ERROR, QUERY_ENDPOINT } from '../../constants';\nimport axios from \"axios\";\nimport { onFetchQuery } from '../../logics/actionHelper';\nimport { stringifyObjectValues } from '../../logics/utils';\nclass Details extends React.Component {\n  onAddNodeLabel() {\n    this.props.dispatch({\n      type: ACTIONS.ADD_NODE_LABEL\n    });\n  }\n  onEditNodeLabel(index, nodeLabel) {\n    this.props.dispatch({\n      type: ACTIONS.EDIT_NODE_LABEL,\n      payload: {\n        id: index,\n        nodeLabel\n      }\n    });\n  }\n  onRemoveNodeLabel(index) {\n    this.props.dispatch({\n      type: ACTIONS.REMOVE_NODE_LABEL,\n      payload: index\n    });\n  }\n  onEditNodeLimit(limit) {\n    this.props.dispatch({\n      type: ACTIONS.SET_NODE_LIMIT,\n      payload: limit\n    });\n  }\n  onRefresh() {\n    this.props.dispatch({\n      type: ACTIONS.REFRESH_NODE_LABELS,\n      payload: this.props.nodeLabels\n    });\n  }\n\n  // onTraverse(nodeId, direction) {\n  //   const query = `g.V('${nodeId}').${direction}()`;\n  //   axios.post(\n  //     QUERY_ENDPOINT,\n  //     { host: this.props.host, port: this.props.port, query: query, nodeLimit: this.props.nodeLimit },\n  //     { headers: { 'Content-Type': 'application/json' } }\n  //   ).then((response) => {\n  //     onFetchQuery(response, query, this.props.nodeLabels, this.props.dispatch);\n  //   }).catch((error) => {\n  //     this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n  //   });\n  // }\n\n  onTogglePhysics(enabled) {\n    this.props.dispatch({\n      type: ACTIONS.SET_IS_PHYSICS_ENABLED,\n      payload: enabled\n    });\n    if (this.props.network) {\n      const edges = {\n        smooth: {\n          type: enabled ? 'dynamic' : 'continuous'\n        }\n      };\n      this.props.network.setOptions({\n        physics: enabled,\n        edges\n      });\n    }\n  }\n  generateList(list) {\n    let key = 0;\n    return list.map(value => {\n      key = key + 1;\n      return React.cloneElement( /*#__PURE__*/React.createElement(ListItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        primary: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      })), {\n        key\n      });\n    });\n  }\n  generateNodeLabelList(nodeLabels) {\n    let index = -1;\n    return nodeLabels.map(nodeLabel => {\n      index = index + 1;\n      nodeLabel.index = index;\n      return React.cloneElement( /*#__PURE__*/React.createElement(ListItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Node Type\",\n        InputLabelProps: {\n          shrink: true\n        },\n        value: nodeLabel.type,\n        onChange: event => {\n          const type = event.target.value;\n          const field = nodeLabel.field;\n          this.onEditNodeLabel(nodeLabel.index, {\n            type,\n            field\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Label Field\",\n        InputLabelProps: {\n          shrink: true\n        },\n        value: nodeLabel.field,\n        onChange: event => {\n          const field = event.target.value;\n          const type = nodeLabel.type;\n          this.onEditNodeLabel(nodeLabel.index, {\n            type,\n            field\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"delete\",\n        size: \"small\",\n        onClick: () => this.onRemoveNodeLabel(nodeLabel.index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }))), {\n        key: index\n      });\n    });\n  }\n  render() {\n    let hasSelected = false;\n    let selectedType = null;\n    let selectedId = null;\n    let selectedProperties = null;\n    let selectedHeader = null;\n    if (!_.isEmpty(this.props.selectedNode)) {\n      hasSelected = true;\n      selectedType = _.get(this.props.selectedNode, 'type');\n      selectedId = _.get(this.props.selectedNode, 'id');\n      selectedProperties = _.get(this.props.selectedNode, 'properties');\n      console.log('These are the selected properties', selectedProperties);\n      stringifyObjectValues(selectedProperties);\n      selectedHeader = 'Node';\n    } else if (!_.isEmpty(this.props.selectedEdge)) {\n      hasSelected = true;\n      selectedType = _.get(this.props.selectedEdge, 'type');\n      selectedId = _.get(this.props.selectedEdge, 'id');\n      selectedProperties = _.get(this.props.selectedEdge, 'properties');\n      selectedHeader = 'Edge';\n      stringifyObjectValues(selectedProperties);\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'details',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AccordionSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }\n      }),\n      \"aria-controls\": \"panel1a-content\",\n      id: \"panel1a-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"Query History\")), /*#__PURE__*/React.createElement(AccordionDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, this.generateList(this.props.queryHistory)))), /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AccordionSummary, {\n      expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }),\n      \"aria-controls\": \"panel1a-content\",\n      id: \"panel1a-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, \"Settings\")), /*#__PURE__*/React.createElement(AccordionDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Automatically stabilize the graph\",\n      \"aria-label\": \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: this.props.isPhysicsEnabled,\n        onChange: () => {\n          this.onTogglePhysics(!this.props.isPhysicsEnabled);\n        },\n        value: \"physics\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }\n      }),\n      label: \"Enable Physics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Number of maximum nodes which should return from the query. Empty or 0 has no restrictions.\",\n      \"aria-label\": \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"Node Limit\",\n      type: \"Number\",\n      variant: \"outlined\",\n      value: this.props.nodeLimit,\n      onChange: event => {\n        const limit = event.target.value;\n        this.onEditNodeLimit(limit);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \"Node Labels\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, this.generateNodeLabelList(this.props.nodeLabels))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      variant: \"extended\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.onRefresh.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 23\n      }\n    }), \"Refresh\"), /*#__PURE__*/React.createElement(Fab, {\n      variant: \"extended\",\n      size: \"small\",\n      onClick: this.onAddNodeLabel.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }), \"Add Node Label\")))))), hasSelected && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, \"Type: \", selectedHeader), selectedHeader === 'Node', /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      key: 'type',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }, String(selectedType))), /*#__PURE__*/React.createElement(TableRow, {\n      key: 'id',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, String(selectedId))))), /*#__PURE__*/React.createElement(JsonToTable, {\n      json: selectedProperties,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }))))));\n  }\n}\nexport const DetailsComponent = connect(state => {\n  return {\n    host: state.gremlin.host,\n    port: state.gremlin.port,\n    network: state.graph.network,\n    selectedNode: state.graph.selectedNode,\n    selectedEdge: state.graph.selectedEdge,\n    queryHistory: state.options.queryHistory,\n    nodeLabels: state.options.nodeLabels,\n    nodeLimit: state.options.nodeLimit,\n    isPhysicsEnabled: state.options.isPhysicsEnabled\n  };\n})(Details);","map":{"version":3,"names":["React","connect","Accordion","AccordionSummary","Typography","AccordionDetails","List","ListItem","ListItemText","TextField","Fab","IconButton","Grid","Table","TableBody","TableRow","TableCell","FormControlLabel","Switch","Divider","Tooltip","ExpandMoreIcon","AddIcon","DeleteIcon","RefreshIcon","ArrowBackIcon","ArrowForwardIcon","_","JsonToTable","ACTIONS","COMMON_GREMLIN_ERROR","QUERY_ENDPOINT","axios","onFetchQuery","stringifyObjectValues","Details","Component","onAddNodeLabel","props","dispatch","type","ADD_NODE_LABEL","onEditNodeLabel","index","nodeLabel","EDIT_NODE_LABEL","payload","id","onRemoveNodeLabel","REMOVE_NODE_LABEL","onEditNodeLimit","limit","SET_NODE_LIMIT","onRefresh","REFRESH_NODE_LABELS","nodeLabels","onTogglePhysics","enabled","SET_IS_PHYSICS_ENABLED","network","edges","smooth","setOptions","physics","generateList","list","key","map","value","cloneElement","generateNodeLabelList","shrink","event","target","field","render","hasSelected","selectedType","selectedId","selectedProperties","selectedHeader","isEmpty","selectedNode","get","console","log","selectedEdge","queryHistory","isPhysicsEnabled","nodeLimit","bind","String","DetailsComponent","state","host","gremlin","port","graph","options"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/components/Details/DetailsComponent.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Fab,\n  IconButton,\n  Grid,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  FormControlLabel,\n  Switch,\n  Divider,\n  Tooltip\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport _ from 'lodash';\nimport { JsonToTable } from 'react-json-to-table';\nimport { ACTIONS, COMMON_GREMLIN_ERROR, QUERY_ENDPOINT } from '../../constants';\nimport axios from \"axios\";\nimport { onFetchQuery} from '../../logics/actionHelper';\nimport { stringifyObjectValues} from '../../logics/utils';\n\nclass Details extends React.Component {\n\n  onAddNodeLabel() {\n    this.props.dispatch({ type: ACTIONS.ADD_NODE_LABEL });\n  }\n\n  onEditNodeLabel(index, nodeLabel) {\n    this.props.dispatch({ type: ACTIONS.EDIT_NODE_LABEL, payload: { id: index, nodeLabel } });\n  }\n\n  onRemoveNodeLabel(index) {\n    this.props.dispatch({ type: ACTIONS.REMOVE_NODE_LABEL, payload: index });\n  }\n\n  onEditNodeLimit(limit) {\n    this.props.dispatch({ type: ACTIONS.SET_NODE_LIMIT, payload: limit });\n  }\n\n  onRefresh() {\n    this.props.dispatch({ type: ACTIONS.REFRESH_NODE_LABELS, payload: this.props.nodeLabels });\n  }\n\n  // onTraverse(nodeId, direction) {\n  //   const query = `g.V('${nodeId}').${direction}()`;\n  //   axios.post(\n  //     QUERY_ENDPOINT,\n  //     { host: this.props.host, port: this.props.port, query: query, nodeLimit: this.props.nodeLimit },\n  //     { headers: { 'Content-Type': 'application/json' } }\n  //   ).then((response) => {\n  //     onFetchQuery(response, query, this.props.nodeLabels, this.props.dispatch);\n  //   }).catch((error) => {\n  //     this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n  //   });\n  // }\n\n  onTogglePhysics(enabled){\n    this.props.dispatch({ type: ACTIONS.SET_IS_PHYSICS_ENABLED, payload: enabled });\n    if (this.props.network) {\n      const edges = {\n        smooth: {\n          type: enabled ? 'dynamic' : 'continuous'\n        }\n      };\n      this.props.network.setOptions( { physics: enabled, edges } );\n    }\n  }\n\n  generateList(list) {\n    let key = 0;\n    return list.map(value => {\n      key = key+1;\n      return React.cloneElement((\n        <ListItem>\n          <ListItemText\n            primary={value}\n          />\n        </ListItem>\n      ), {\n        key\n      })\n    });\n  }\n\n  generateNodeLabelList(nodeLabels) {\n    let index = -1;\n    return nodeLabels.map( nodeLabel => {\n      index = index+1;\n      nodeLabel.index = index;\n      return React.cloneElement((\n        <ListItem>\n          <TextField id=\"standard-basic\" label=\"Node Type\" InputLabelProps={{ shrink: true }} value={nodeLabel.type} onChange={event => {\n            const type = event.target.value;\n            const field = nodeLabel.field;\n            this.onEditNodeLabel(nodeLabel.index, { type, field })\n          }}\n          />\n          <TextField id=\"standard-basic\" label=\"Label Field\" InputLabelProps={{ shrink: true }} value={nodeLabel.field} onChange={event => {\n            const field = event.target.value;\n            const type = nodeLabel.type;\n            this.onEditNodeLabel(nodeLabel.index, { type, field })\n          }}/>\n          <IconButton aria-label=\"delete\" size=\"small\" onClick={() => this.onRemoveNodeLabel(nodeLabel.index)}>\n            <DeleteIcon fontSize=\"small\" />\n          </IconButton>\n        </ListItem>\n      ), {\n        key: index\n      })\n    });\n  }\n\n  render(){\n    let hasSelected = false;\n    let selectedType = null;\n    let selectedId = null ;\n    let selectedProperties = null;\n    let selectedHeader = null;\n    if (!_.isEmpty(this.props.selectedNode)) {\n      hasSelected = true;\n      selectedType =  _.get(this.props.selectedNode, 'type');\n      selectedId = _.get(this.props.selectedNode, 'id');\n      selectedProperties = _.get(this.props.selectedNode, 'properties') ;\n      console.log('These are the selected properties', selectedProperties);\n      stringifyObjectValues(selectedProperties);\n      selectedHeader = 'Node';\n    } else if (!_.isEmpty(this.props.selectedEdge)) {\n      hasSelected = true;\n      selectedType =  _.get(this.props.selectedEdge, 'type');\n      selectedId = _.get(this.props.selectedEdge, 'id');\n      selectedProperties = _.get(this.props.selectedEdge, 'properties');\n      selectedHeader = 'Edge';\n      stringifyObjectValues(selectedProperties);\n    }\n\n\n    return (\n      <div className={'details'}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={12}>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography>Query History</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <List dense={true}>\n                  {this.generateList(this.props.queryHistory)}\n                </List>\n              </AccordionDetails>\n            </Accordion>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography>Settings</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Tooltip title=\"Automatically stabilize the graph\" aria-label=\"add\">\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={this.props.isPhysicsEnabled}\n                          onChange={() => { this.onTogglePhysics(!this.props.isPhysicsEnabled); }}\n                          value=\"physics\"\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Enable Physics\"\n                    />\n                    </Tooltip>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Tooltip title=\"Number of maximum nodes which should return from the query. Empty or 0 has no restrictions.\" aria-label=\"add\">\n                      <TextField label=\"Node Limit\" type=\"Number\" variant=\"outlined\" value={this.props.nodeLimit} onChange={event => {\n                        const limit = event.target.value;\n                        this.onEditNodeLimit(limit)\n                      }} />\n                    </Tooltip>\n\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Typography>Node Labels</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <List dense={true}>\n                      {this.generateNodeLabelList(this.props.nodeLabels)}\n                    </List>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Fab variant=\"extended\" color=\"primary\" size=\"small\" onClick={this.onRefresh.bind(this)}>\n                      <RefreshIcon />\n                      Refresh\n                    </Fab>\n                    <Fab variant=\"extended\" size=\"small\" onClick={this.onAddNodeLabel.bind(this)}>\n                      <AddIcon />\n                      Add Node Label\n                    </Fab>\n                  </Grid>\n                </Grid>\n              </AccordionDetails>\n            </Accordion>\n          </Grid>\n          {hasSelected &&\n          <Grid item xs={12} sm={12} md={12}>\n            <h2>Type: {selectedHeader}</h2>\n            {selectedHeader === 'Node'}\n            <Grid item xs={12} sm={12} md={12}>\n              <Grid container>\n                <Table aria-label=\"simple table\">\n                  <TableBody>\n                    <TableRow key={'type'}>\n                      <TableCell scope=\"row\">Type</TableCell>\n                      <TableCell align=\"left\">{String(selectedType)}</TableCell>\n                    </TableRow>\n                    <TableRow key={'id'}>\n                      <TableCell scope=\"row\">ID</TableCell>\n                      <TableCell align=\"left\">{String(selectedId)}</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n                <JsonToTable json={selectedProperties}/>\n              </Grid>\n            </Grid>\n          </Grid>\n          }\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport const DetailsComponent = connect((state)=>{\n  return {\n    host: state.gremlin.host,\n    port: state.gremlin.port,\n    network: state.graph.network,\n    selectedNode: state.graph.selectedNode,\n    selectedEdge: state.graph.selectedEdge,\n    queryHistory: state.options.queryHistory,\n    nodeLabels: state.options.nodeLabels,\n    nodeLimit: state.options.nodeLimit,\n    isPhysicsEnabled: state.options.isPhysicsEnabled\n  };\n})(Details);"],"mappings":"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"},"metadata":{},"sourceType":"module"}