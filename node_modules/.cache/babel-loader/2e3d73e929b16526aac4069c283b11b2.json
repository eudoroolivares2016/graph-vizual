{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/components/Header/HeaderComp.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport { ACTIONS, QUERY_ENDPOINT, COMMON_GREMLIN_ERROR } from '../../constants';\nimport { onFetchQuery } from '../../logics/actionHelper';\nfunction sendQuery() {\n  // this.props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n  axios.post(QUERY_ENDPOINT, {\n    host: this.props.host,\n    port: this.props.port,\n    query: this.props.query,\n    nodeLimit: this.props.nodeLimit\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    onFetchQuery(response, this.props.query, this.props.nodeLabels, this.props.dispatch);\n  }).catch(error => {\n    this.props.dispatch({\n      type: ACTIONS.SET_ERROR,\n      payload: COMMON_GREMLIN_ERROR\n    });\n  });\n}\nexport const HeaderComp = _ref => {\n  let {\n    port,\n    host,\n    query,\n    changeHost,\n    changePort,\n    changeQuery\n  } = _ref;\n  function sendQuery() {\n    // this.props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n    axios.post(QUERY_ENDPOINT, {\n      host: this.props.host,\n      port: this.props.port,\n      query: this.props.query,\n      nodeLimit: this.props.nodeLimit\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      onFetchQuery(response, this.props.query, this.props.nodeLabels, this.props.dispatch);\n    }).catch(error => {\n      this.props.dispatch({\n        type: ACTIONS.SET_ERROR,\n        payload: COMMON_GREMLIN_ERROR\n      });\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: host,\n    onChange: changeHost,\n    label: \"host\",\n    style: {\n      width: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: port,\n    onChange: changePort,\n    label: \"port\",\n    style: {\n      width: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: query,\n    onChange: changeQuery,\n    label: \"gremlin query example: g.V()\",\n    style: {\n      width: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      width: '150px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \" Execute Query\")));\n};\nexport default HeaderComp;","map":{"version":3,"names":["React","connect","Button","TextField","axios","ACTIONS","QUERY_ENDPOINT","COMMON_GREMLIN_ERROR","onFetchQuery","sendQuery","post","host","props","port","query","nodeLimit","headers","then","response","nodeLabels","dispatch","catch","error","type","SET_ERROR","payload","HeaderComp","changeHost","changePort","changeQuery","width"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/components/Header/HeaderComp.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, TextField }  from '@material-ui/core';\nimport axios from 'axios';\nimport { ACTIONS, QUERY_ENDPOINT, COMMON_GREMLIN_ERROR } from '../../constants';\nimport { onFetchQuery } from '../../logics/actionHelper';\n\nfunction sendQuery() {\n    // this.props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n    axios.post(\n      QUERY_ENDPOINT,\n      { host: this.props.host, port: this.props.port, query: this.props.query, nodeLimit: this.props.nodeLimit },\n      { headers: { 'Content-Type': 'application/json' } }\n    ).then((response) => {\n      onFetchQuery(response, this.props.query, this.props.nodeLabels, this.props.dispatch);\n    }).catch((error) => {\n      this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n    });\n  }\n\n\nexport const HeaderComp = ({port, host, query, changeHost, changePort, changeQuery}) => {\n    function sendQuery() {\n        // this.props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n        axios.post(\n          QUERY_ENDPOINT,\n          { host: this.props.host, port: this.props.port, query: this.props.query, nodeLimit: this.props.nodeLimit },\n          { headers: { 'Content-Type': 'application/json' } }\n        ).then((response) => {\n          onFetchQuery(response, this.props.query, this.props.nodeLabels, this.props.dispatch);\n        }).catch((error) => {\n          this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n        });\n      }\n\n    return (\n        <header>\n          <form>\n            <TextField value={host} onChange={changeHost} label=\"host\" style={{width: '10%'}} />\n            <TextField value={port} onChange= {changePort}  label=\"port\" style={{width: '10%'}} />\n            <TextField value={query} onChange={changeQuery} label=\"gremlin query example: g.V()\" style={{width: '50%'}} />\n            <Button variant=\"contained\" color=\"primary\" style={{width: '150px'}}> Execute Query</Button>\n          </form>\n    </header>\n      )\n    }\nexport default HeaderComp"],"mappings":"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"},"metadata":{},"sourceType":"module"}