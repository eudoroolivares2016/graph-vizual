{"ast":null,"code":"import _ from 'lodash';\nimport { ACTIONS } from '../constants';\n// https://visjs.github.io/vis-network/docs/network/ vis-network docs\n// This just sets the value for the physics engine that the network uses\nconst initialState = {\n  nodeLabels: [],\n  queryHistory: [],\n  isPhysicsEnabled: false,\n  nodeLimit: 10,\n  networkOptions: {\n    autoResize: false,\n    // https://visjs.github.io/vis-network/docs/network/physics.html\n    physics: {\n      barnesHut: {\n        avoidOverlap: 100\n      },\n      maxVelocity: 10,\n      solver: 'barnesHut',\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 50,\n        updateInterval: 25\n      }\n    },\n    //https://visjs.github.io/vis-network/docs/network/nodes.html\n    nodes: {\n      shape: \"circle\",\n      size: 100,\n      borderWidth: 2,\n      font: {\n        size: 11\n      },\n      color: 'red'\n    },\n    // https://visjs.github.io/vis-network/docs/network/edges.html\n    edges: {\n      width: 2,\n      font: {\n        size: 11\n      }\n    }\n  }\n};\n\n// Take current state append the new values to the new state property\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    // case ACTIONS.SET_IS_PHYSICS_ENABLED: {\n    //   const isPhysicsEnabled = _.get(action, 'payload', true);\n    //   return { ...state, isPhysicsEnabled };\n    // }\n    // Take current state append the new values to the new state property\n    case ACTIONS.ADD_QUERY_HISTORY:\n      {\n        return {\n          ...state,\n          queryHistory: [...state.queryHistory, action.payload]\n        };\n      }\n    case ACTIONS.CLEAR_QUERY_HISTORY:\n      {\n        return {\n          ...state,\n          queryHistory: []\n        };\n      }\n    case ACTIONS.SET_NODE_LABELS:\n      {\n        const nodeLabels = action.payload;\n        return {\n          ...state,\n          nodeLabels\n        };\n      }\n    case ACTIONS.ADD_NODE_LABEL:\n      {\n        const nodeLabels = [...state.nodeLabels, {}];\n        return {\n          ...state,\n          nodeLabels\n        };\n      }\n    case ACTIONS.EDIT_NODE_LABEL:\n      {\n        const editIndex = action.payload.id;\n        const editedNodeLabel = action.payload.nodeLabel;\n        if (state.nodeLabels[editIndex]) {\n          const nodeLabels = [...state.nodeLabels.slice(0, editIndex), editedNodeLabel, ...state.nodeLabels.slice(editIndex + 1)];\n          return {\n            ...state,\n            nodeLabels\n          };\n        }\n        return state;\n      }\n    case ACTIONS.REMOVE_NODE_LABEL:\n      {\n        const removeIndex = action.payload;\n        if (removeIndex < state.nodeLabels.length) {\n          const nodeLabels = [...state.nodeLabels.slice(0, removeIndex), ...state.nodeLabels.slice(removeIndex + 1)];\n          return {\n            ...state,\n            nodeLabels\n          };\n        }\n        return state;\n      }\n    case ACTIONS.SET_NODE_LIMIT:\n      {\n        const nodeLimit = action.payload;\n        return {\n          ...state,\n          nodeLimit\n        };\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["_","ACTIONS","initialState","nodeLabels","queryHistory","isPhysicsEnabled","nodeLimit","networkOptions","autoResize","physics","barnesHut","avoidOverlap","maxVelocity","solver","timestep","stabilization","enabled","iterations","updateInterval","nodes","shape","size","borderWidth","font","color","edges","width","reducer","state","action","type","ADD_QUERY_HISTORY","payload","CLEAR_QUERY_HISTORY","SET_NODE_LABELS","ADD_NODE_LABEL","EDIT_NODE_LABEL","editIndex","id","editedNodeLabel","nodeLabel","slice","REMOVE_NODE_LABEL","removeIndex","length","SET_NODE_LIMIT"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/reducers/optionReducer.js"],"sourcesContent":["import _ from 'lodash';\nimport { ACTIONS } from '../constants';\n// https://visjs.github.io/vis-network/docs/network/ vis-network docs\n// This just sets the value for the physics engine that the network uses\nconst initialState = {\n  nodeLabels: [],\n  queryHistory: [],\n  isPhysicsEnabled: false,\n  nodeLimit: 10,\n  networkOptions: {\n    autoResize: false,\n    // https://visjs.github.io/vis-network/docs/network/physics.html\n    physics: {\n      barnesHut: {\n        avoidOverlap: 100\n      },\n      maxVelocity: 10,\n      solver: 'barnesHut',\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 50,\n        updateInterval: 25\n      }\n    },\n    //https://visjs.github.io/vis-network/docs/network/nodes.html\n    nodes: {\n      shape: \"circle\",\n      size: 100,\n      borderWidth: 2,\n      font: {\n        size: 11\n      },\n      color: 'red'\n    },\n    // https://visjs.github.io/vis-network/docs/network/edges.html\n    edges: {\n      width: 2,\n      font: {\n        size: 11\n      }\n    }\n  }\n};\n\n// Take current state append the new values to the new state property\nexport const reducer =  (state=initialState, action)=>{\n  switch (action.type){\n    // case ACTIONS.SET_IS_PHYSICS_ENABLED: {\n    //   const isPhysicsEnabled = _.get(action, 'payload', true);\n    //   return { ...state, isPhysicsEnabled };\n    // }\n    // Take current state append the new values to the new state property\n    case ACTIONS.ADD_QUERY_HISTORY: {\n      return { ...state, queryHistory: [ ...state.queryHistory, action.payload] }\n    }\n    case ACTIONS.CLEAR_QUERY_HISTORY: {\n      return { ...state, queryHistory: [] }\n    }\n    case ACTIONS.SET_NODE_LABELS: {\n      const nodeLabels = action.payload;\n      return { ...state, nodeLabels };\n    }\n    case ACTIONS.ADD_NODE_LABEL: {\n      const nodeLabels = [...state.nodeLabels, {}];\n      return { ...state, nodeLabels };\n    }\n    case ACTIONS.EDIT_NODE_LABEL: {\n      const editIndex = action.payload.id;\n      const editedNodeLabel = action.payload.nodeLabel;\n\n      if (state.nodeLabels[editIndex]) {\n        const nodeLabels = [...state.nodeLabels.slice(0, editIndex), editedNodeLabel, ...state.nodeLabels.slice(editIndex+1)];\n        return { ...state, nodeLabels };\n      }\n      return state;\n    }\n    case ACTIONS.REMOVE_NODE_LABEL: {\n      const removeIndex = action.payload;\n      if (removeIndex < state.nodeLabels.length) {\n        const nodeLabels = [...state.nodeLabels.slice(0, removeIndex), ...state.nodeLabels.slice(removeIndex+1)];\n        return { ...state, nodeLabels };\n      }\n      return state;\n    }\n    case ACTIONS.SET_NODE_LIMIT: {\n      const nodeLimit = action.payload;\n      return { ...state, nodeLimit };\n    }\n    default:\n      return state;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}