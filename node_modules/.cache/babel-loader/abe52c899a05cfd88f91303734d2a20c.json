{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/components/NetworkGraph/NetworkGraphComponent.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Network } from 'vis-network';\nimport { ACTIONS } from '../../constants';\nfunction NetworkGraph() {\n  const container = useRef(null);\n  // If the props change then use these settings default is empty array\n  useEffect(() => {\n    const data = {\n      nodes: props.nodeHolder,\n      edges: props.edgeHolder\n    };\n    const options = props.networkOptions;\n    const network = container.current && new Network(container.current, data, options);\n    network.on('selectNode', params => {\n      const nodeId = params.nodes && params.nodes.length > 0 ? params.nodes[0] : null;\n      props.dispatch({\n        type: ACTIONS.SET_SELECTED_NODE,\n        payload: nodeId\n      });\n    });\n    network.on(\"selectEdge\", params => {\n      // Not add Nodes have Edges\n      const edgeId = params.edges && params.edges.length === 1 ? params.edges[0] : null;\n      const isNodeSelected = params.nodes && params.nodes.length > 0;\n      if (!isNodeSelected && edgeId !== null) {\n        props.dispatch({\n          type: ACTIONS.SET_SELECTED_EDGE,\n          payload: edgeId\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: container,\n    className: 'mynetwork',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  });\n}\nexport const NetworkGraphComponent = connect(state => {\n  return {\n    nodeHolder: state.graph.nodeHolder,\n    edgeHolder: state.graph.edgeHolder,\n    networkOptions: state.options.networkOptions\n  };\n})(NetworkGraph);","map":{"version":3,"names":["React","useEffect","useRef","connect","Network","ACTIONS","NetworkGraph","container","data","nodes","props","nodeHolder","edges","edgeHolder","options","networkOptions","network","current","on","params","nodeId","length","dispatch","type","SET_SELECTED_NODE","payload","edgeId","isNodeSelected","SET_SELECTED_EDGE","NetworkGraphComponent","state","graph"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/components/NetworkGraph/NetworkGraphComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport {connect} from 'react-redux'\nimport { Network } from 'vis-network'\nimport { ACTIONS } from '../../constants'\n\nfunction NetworkGraph () {\n  const container = useRef(null)\n  // If the props change then use these settings default is empty array\n  useEffect(() => {\n    const data = {\n          nodes: props.nodeHolder,\n          edges: props.edgeHolder\n        }\n        const options = props.networkOptions\n    const network =\n      container.current &&\n      new Network(container.current, data, options)\n      network.on('selectNode', (params) => {\n          const nodeId = params.nodes && params.nodes.length > 0 ? params.nodes[0] : null\n          props.dispatch({ type: ACTIONS.SET_SELECTED_NODE, payload: nodeId })\n          })\n      network.on(\"selectEdge\", (params) => {\n        // Not add Nodes have Edges\n        const edgeId = params.edges && params.edges.length === 1 ? params.edges[0] : null\n        const isNodeSelected = params.nodes && params.nodes.length > 0\n        if (!isNodeSelected && edgeId !== null) {\n          props.dispatch({ type: ACTIONS.SET_SELECTED_EDGE, payload: edgeId })\n        } \n  }) }, [])\n\n    return (<div ref={container} className={'mynetwork'} />)\n  \n}\n\nexport const NetworkGraphComponent = connect((state)=>{\n  return {\n    nodeHolder: state.graph.nodeHolder,\n    edgeHolder: state.graph.edgeHolder,\n    networkOptions: state.options.networkOptions\n  }\n})(NetworkGraph)"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAAQC,OAAO,QAAO,aAAa;AACnC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,SAASC,YAAY,GAAI;EACvB,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAC9B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMO,IAAI,GAAG;MACPC,KAAK,EAAEC,KAAK,CAACC,UAAU;MACvBC,KAAK,EAAEF,KAAK,CAACG;IACf,CAAC;IACD,MAAMC,OAAO,GAAGJ,KAAK,CAACK,cAAc;IACxC,MAAMC,OAAO,GACXT,SAAS,CAACU,OAAO,IACjB,IAAIb,OAAO,CAACG,SAAS,CAACU,OAAO,EAAET,IAAI,EAAEM,OAAO,CAAC;IAC7CE,OAAO,CAACE,EAAE,CAAC,YAAY,EAAGC,MAAM,IAAK;MACjC,MAAMC,MAAM,GAAGD,MAAM,CAACV,KAAK,IAAIU,MAAM,CAACV,KAAK,CAACY,MAAM,GAAG,CAAC,GAAGF,MAAM,CAACV,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;MAC/EC,KAAK,CAACY,QAAQ,CAAC;QAAEC,IAAI,EAAElB,OAAO,CAACmB,iBAAiB;QAAEC,OAAO,EAAEL;MAAO,CAAC,CAAC;IACpE,CAAC,CAAC;IACNJ,OAAO,CAACE,EAAE,CAAC,YAAY,EAAGC,MAAM,IAAK;MACnC;MACA,MAAMO,MAAM,GAAGP,MAAM,CAACP,KAAK,IAAIO,MAAM,CAACP,KAAK,CAACS,MAAM,KAAK,CAAC,GAAGF,MAAM,CAACP,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;MACjF,MAAMe,cAAc,GAAGR,MAAM,CAACV,KAAK,IAAIU,MAAM,CAACV,KAAK,CAACY,MAAM,GAAG,CAAC;MAC9D,IAAI,CAACM,cAAc,IAAID,MAAM,KAAK,IAAI,EAAE;QACtChB,KAAK,CAACY,QAAQ,CAAC;UAAEC,IAAI,EAAElB,OAAO,CAACuB,iBAAiB;UAAEH,OAAO,EAAEC;QAAO,CAAC,CAAC;MACtE;IACN,CAAC,CAAC;EAAC,CAAC,EAAE,EAAE,CAAC;EAEP,oBAAQ;IAAK,GAAG,EAAEnB,SAAU;IAAC,SAAS,EAAE,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;AAE3D;AAEA,OAAO,MAAMsB,qBAAqB,GAAG1B,OAAO,CAAE2B,KAAK,IAAG;EACpD,OAAO;IACLnB,UAAU,EAAEmB,KAAK,CAACC,KAAK,CAACpB,UAAU;IAClCE,UAAU,EAAEiB,KAAK,CAACC,KAAK,CAAClB,UAAU;IAClCE,cAAc,EAAEe,KAAK,CAAChB,OAAO,CAACC;EAChC,CAAC;AACH,CAAC,CAAC,CAACT,YAAY,CAAC"},"metadata":{},"sourceType":"module"}