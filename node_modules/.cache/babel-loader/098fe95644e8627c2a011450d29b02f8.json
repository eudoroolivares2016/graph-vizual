{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/App.js\";\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { NetworkGraphComponent } from './components/NetworkGraph/NetworkGraphComponent';\nimport { HeaderComponent } from './components/Header/HeaderComponent';\nimport HeaderComp from './components/Header/HeaderComp';\nimport { DetailsComponent } from './components/Details/DetailsComponent';\nimport NetworkField from './components/NetworkField/NetworkField';\nimport Graph from \"react-vis-network-graph\";\nimport { useState } from \"react\";\nimport vis from 'vis-network';\n\n// export class App extends React.Component{\n//   render(){\n//     return (\n//       <div>\n//         <NetworkField response={\"hi\"} />\n//         <Grid container spacing={1}>\n//           <Grid item xs={12} sm={12} md={12}>\n//             <HeaderComponent />\n//           </Grid>\n//           <Grid item xs={12} sm={9} md={9}>\n//             <NetworkGraphComponent />\n//           </Grid>\n//           <Grid item xs={12} sm={3} md={3}>\n//             <DetailsComponent />\n//           </Grid>\n//         </Grid>\n\n//       </div>\n//       );\n//   }\n// }\n\nfunction App() {\n  const [curHead, changeState] = useState(\"Graph Viz\");\n  const [currPort, changePort] = useState(\"8182\");\n  const [currHost, changeHost] = useState(\"localhost\");\n  const [currQuery, changeQuery] = useState(\"g.V()\");\n  const changeHeader = () => {\n    changeState(\"noon\");\n  };\n  const graph = {\n    nodes: [{\n      id: 1,\n      label: 'node',\n      title: \"node 1 tootip text\"\n    }, {\n      id: 2,\n      label: 'node',\n      title: \"node 2 tootip text\"\n    }, {\n      id: 3,\n      label: 'node',\n      title: \"node 3 tootip text\"\n    }, {\n      id: 4,\n      label: 'node',\n      title: \"node 4 tootip text\"\n    }, {\n      id: 5,\n      label: 'node',\n      title: \"node 5 tootip text\"\n    }],\n    edges: [{\n      from: 1,\n      to: 2,\n      label: 'edge'\n    }, {\n      from: 1,\n      to: 3,\n      label: 'edge'\n    }, {\n      from: 2,\n      to: 4,\n      label: 'edge'\n    }, {\n      from: 2,\n      to: 5,\n      label: 'edge'\n    }]\n  };\n  const [currGraph, changeGraph] = useState();\n  // let network = new vis.Network\n\n  // const updatePortValue = (newPort) => {\n  //   changePort(newPort)\n  // }\n\n  // function changeHeader(){\n  //   changePort(\"noon\")\n  // }\n  // function changeHeader(){\n  //   changeHost(\"noon\")\n  // }\n  // function changeHeader(){\n  //   changeQuery(\"noon\")\n  // }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderComp, {\n    port: currPort,\n    host: currHost,\n    query: currQuery,\n    changePort: newPort => changePort(newPort.target.value),\n    changeHost: newHost => changeHost(newHost.target.value),\n    changeQuery: newQuery => changeQuery(newQuery.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(NetworkField, {\n    response: curHead,\n    changeGraph: graph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","Grid","NetworkGraphComponent","HeaderComponent","HeaderComp","DetailsComponent","NetworkField","Graph","useState","vis","App","curHead","changeState","currPort","changePort","currHost","changeHost","currQuery","changeQuery","changeHeader","graph","nodes","id","label","title","edges","from","to","currGraph","changeGraph","newPort","target","value","newHost","newQuery"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Grid }  from '@material-ui/core';\nimport { NetworkGraphComponent } from './components/NetworkGraph/NetworkGraphComponent';\nimport { HeaderComponent } from './components/Header/HeaderComponent';\nimport HeaderComp from './components/Header/HeaderComp';\nimport { DetailsComponent } from './components/Details/DetailsComponent';\nimport NetworkField from './components/NetworkField/NetworkField';\nimport Graph from \"react-vis-network-graph\";\nimport { useState } from \"react\"\nimport vis from 'vis-network';\n\n// export class App extends React.Component{\n//   render(){\n//     return (\n//       <div>\n//         <NetworkField response={\"hi\"} />\n//         <Grid container spacing={1}>\n//           <Grid item xs={12} sm={12} md={12}>\n//             <HeaderComponent />\n//           </Grid>\n//           <Grid item xs={12} sm={9} md={9}>\n//             <NetworkGraphComponent />\n//           </Grid>\n//           <Grid item xs={12} sm={3} md={3}>\n//             <DetailsComponent />\n//           </Grid>\n//         </Grid>\n\n//       </div>\n//       );\n//   }\n// }\n\n\nfunction App() {\n\n  \n  const [curHead, changeState] = useState(\"Graph Viz\");\n  const [currPort, changePort] = useState(\"8182\");\n  const [currHost, changeHost] = useState(\"localhost\");\n  const [currQuery, changeQuery] = useState(\"g.V()\");\n  \n  const changeHeader = () => {\n    changeState(\"noon\")\n  }\n  const graph = {\n    nodes: [\n      { id: 1, label: 'node', title: \"node 1 tootip text\" },\n      { id: 2, label: 'node', title: \"node 2 tootip text\" },\n      { id: 3, label: 'node', title: \"node 3 tootip text\" },\n      { id: 4, label: 'node', title: \"node 4 tootip text\" },\n      { id: 5, label: 'node', title: \"node 5 tootip text\" }\n    ],\n    edges: [\n      { from: 1, to: 2, label: 'edge'},\n      { from: 1, to: 3, label: 'edge' },\n      { from: 2, to: 4, label: 'edge' },\n      { from: 2, to: 5, label: 'edge' }\n    ]\n  }\n\n  const [currGraph, changeGraph]= useState()\n  // let network = new vis.Network\n\n\n  // const updatePortValue = (newPort) => {\n  //   changePort(newPort)\n  // }\n\n  // function changeHeader(){\n  //   changePort(\"noon\")\n  // }\n  // function changeHeader(){\n  //   changeHost(\"noon\")\n  // }\n  // function changeHeader(){\n  //   changeQuery(\"noon\")\n  // }\n    return (\n      <div>\n        <HeaderComp port={currPort} host={currHost} query={currQuery} changePort= {(newPort) => changePort(newPort.target.value)}\n        changeHost= {(newHost) => changeHost(newHost.target.value)}\n        changeQuery= {(newQuery) => changeQuery(newQuery.target.value)} />\n        <NetworkField response={curHead} changeGraph={graph}/>\n\n        {/* { <Grid container spacing={1}>\n          <Grid item xs={12} sm={12} md={12}>\n            <HeaderComponent />\n          </Grid>\n          <Grid item xs={12} sm={9} md={9}>\n            <NetworkGraphComponent />\n          </Grid>\n          <Grid item xs={12} sm={3} md={3}>\n            <DetailsComponent />\n          </Grid>\n        </Grid> } */}\n\n      </div>\n      );\n }\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}