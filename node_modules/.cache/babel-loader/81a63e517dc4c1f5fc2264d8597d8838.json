{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/components/Header/HeaderComponent.js\";\nimport React, { useState } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { Button, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport { ACTIONS, QUERY_ENDPOINT, COMMON_GREMLIN_ERROR } from '../../constants';\nimport { onFetchQuery } from '../../logics/actionHelper';\nfunction Header(props) {\n  const [port, setPort] = useState(8182);\n  const [host, setHost] = useState('localhost');\n  const [query, setQuery] = useState('g.V()');\n  const clearGraph = () => {\n    props.dispatch({\n      type: ACTIONS.CLEAR_GRAPH\n    });\n    props.dispatch({\n      type: ACTIONS.CLEAR_QUERY_HISTORY\n    });\n  };\n  const clearQueryHistory = () => {\n    props.dispatch({\n      type: ACTIONS.CLEAR_QUERY_HISTORY\n    });\n  };\n  // Send the gremlin query to the server\n  const sendQuery = e => {\n    e.preventDefault();\n    // props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n    props.dispatch({\n      type: ACTIONS.SET_ERROR,\n      payload: null\n    });\n    axios.post(QUERY_ENDPOINT, {\n      host: props.host,\n      port: props.port,\n      query: props.query,\n      nodeLimit: props.nodeLimit\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      onFetchQuery(response, props.query, props.nodeLabels, props.dispatch);\n    }).catch(error => {\n      props.dispatch({\n        type: ACTIONS.SET_ERROR,\n        payload: COMMON_GREMLIN_ERROR\n      });\n    });\n  };\n\n  // const onHostChanged = (host) => {\n  //   props.dispatch({ type: ACTIONS.SET_HOST, payload: host });\n  // }\n\n  // const onQueryChanged = (query) => {\n  //   props.dispatch({ type: ACTIONS.SET_QUERY, payload: query });\n  // }\n  // NEW\n  const onHostChanged = e => {\n    setHost(e.target.value);\n    props.dispatch({\n      type: ACTIONS.SET_HOST,\n      payload: host\n    });\n  };\n  const onPortChanged = e => {\n    setPort(e.target.value);\n    props.dispatch({\n      type: ACTIONS.SET_PORT,\n      payload: port\n    });\n  };\n  const onQueryChanged = e => {\n    setQuery(e.target.value);\n    props.dispatch({\n      type: ACTIONS.SET_QUERY,\n      payload: query\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'header',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: host,\n    onChange: onHostChanged,\n    id: \"standard-basic\",\n    label: \"host\",\n    style: {\n      width: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: port,\n    onChange: onPortChanged,\n    id: \"standard-basic\",\n    label: \"port\",\n    style: {\n      width: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: query,\n    onChange: onQueryChanged,\n    id: \"standard-basic\",\n    label: \"gremlin query example: g.V()\",\n    style: {\n      width: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: sendQuery,\n    style: {\n      width: '150px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \" Execute Query\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, props.error));\n}\nexport const HeaderComponent = connect(state => {\n  return {\n    host: state.gremlin.host,\n    port: state.gremlin.port,\n    query: state.gremlin.query,\n    error: state.gremlin.error,\n    nodes: state.graph.nodes,\n    edges: state.graph.edges,\n    nodeLabels: state.options.nodeLabels,\n    nodeLimit: state.options.nodeLimit\n  };\n})(Header);","map":{"version":3,"names":["React","useState","connect","useDispatch","useSelector","Button","TextField","axios","ACTIONS","QUERY_ENDPOINT","COMMON_GREMLIN_ERROR","onFetchQuery","Header","props","port","setPort","host","setHost","query","setQuery","clearGraph","dispatch","type","CLEAR_GRAPH","CLEAR_QUERY_HISTORY","clearQueryHistory","sendQuery","e","preventDefault","SET_ERROR","payload","post","nodeLimit","headers","then","response","nodeLabels","catch","error","onHostChanged","target","value","SET_HOST","onPortChanged","SET_PORT","onQueryChanged","SET_QUERY","width","color","HeaderComponent","state","gremlin","nodes","graph","edges","options"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/components/Header/HeaderComponent.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { connect, useDispatch, useSelector} from 'react-redux';\nimport { Button, TextField }  from '@material-ui/core';\nimport axios from 'axios';\nimport { ACTIONS, QUERY_ENDPOINT, COMMON_GREMLIN_ERROR } from '../../constants';\nimport { onFetchQuery } from '../../logics/actionHelper';\n\nfunction Header(props) {\n\n  const [port, setPort] = useState(8182)\n  const [host, setHost] = useState('localhost')\n  const [query, setQuery] = useState('g.V()')\n\n  const clearGraph = () => {\n    props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n    props.dispatch({ type: ACTIONS.CLEAR_QUERY_HISTORY });\n  }\n\n  const clearQueryHistory = () => {\n    props.dispatch({ type: ACTIONS.CLEAR_QUERY_HISTORY });\n  }\n  // Send the gremlin query to the server\n  const sendQuery = (e) => {\n    e.preventDefault()\n    // props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n    props.dispatch({ type: ACTIONS.SET_ERROR, payload: null });\n    axios.post(\n      QUERY_ENDPOINT,\n      { host: props.host, port: props.port, query: props.query, nodeLimit: props.nodeLimit },\n      { headers: { 'Content-Type': 'application/json' } }\n    ).then((response) => {\n      onFetchQuery(response, props.query, props.nodeLabels, props.dispatch);\n    }).catch((error) => {\n      props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n    });\n  }\n\n  // const onHostChanged = (host) => {\n  //   props.dispatch({ type: ACTIONS.SET_HOST, payload: host });\n  // }\n\n  // const onQueryChanged = (query) => {\n  //   props.dispatch({ type: ACTIONS.SET_QUERY, payload: query });\n  // }\n  // NEW\n  const onHostChanged = e => {\n    setHost(e.target.value);\n    props.dispatch({ type: ACTIONS.SET_HOST, payload: host });\n  }\n\n  const onPortChanged = e => {\n    setPort(e.target.value);\n    props.dispatch({ type: ACTIONS.SET_PORT, payload: port });\n  }\n\n  const onQueryChanged = e => {\n    setQuery(e.target.value);\n    props.dispatch({ type: ACTIONS.SET_QUERY, payload: query });\n  }\n\n    return (\n      <div className={'header'}>\n        <form noValidate autoComplete=\"off\">\n          <TextField value={host} onChange={onHostChanged} id=\"standard-basic\" label=\"host\" style={{width: '10%'}} />\n          <TextField value={port} onChange={onPortChanged} id=\"standard-basic\" label=\"port\" style={{width: '10%'}} />\n          <TextField value={query} onChange={onQueryChanged} id=\"standard-basic\" label=\"gremlin query example: g.V()\" style={{width: '50%'}} />\n          <Button variant=\"contained\" color=\"primary\" onClick={sendQuery} style={{width: '150px'}}> Execute Query</Button>\n        </form>\n\n        <br />\n        <div style={{color: 'red'}}>{props.error}</div>\n      </div>\n\n    );\n  \n}\n\nexport const HeaderComponent = connect((state)=>{\n  return {\n    host: state.gremlin.host,\n    port: state.gremlin.port,\n    query: state.gremlin.query,\n    error: state.gremlin.error,\n    nodes: state.graph.nodes,\n    edges: state.graph.edges,\n    nodeLabels: state.options.nodeLabels,\n    nodeLimit: state.options.nodeLimit\n  };\n})(Header);"],"mappings":"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"},"metadata":{},"sourceType":"module"}