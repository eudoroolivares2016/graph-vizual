{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/components/Details/DetailsComponent.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Accordion, AccordionSummary, Typography, AccordionDetails, List, ListItem, ListItemText, TextField, Fab, IconButton, Grid, Table, TableBody, TableRow, TableCell, FormControlLabel, Switch, Divider, Tooltip } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport _ from 'lodash';\nimport { JsonToTable } from 'react-json-to-table';\nimport { ACTIONS, COMMON_GREMLIN_ERROR, QUERY_ENDPOINT } from '../../constants';\nimport axios from \"axios\";\nimport { onFetchQuery } from '../../logics/actionHelper';\nimport { stringifyObjectValues } from '../../logics/utils';\nfunction Details(props) {\n  const onAddNodeLabel = () => {\n    props.dispatch({\n      type: ACTIONS.ADD_NODE_LABEL\n    });\n  };\n  const onEditNodeLabel = (index, nodeLabel) => {\n    props.dispatch({\n      type: ACTIONS.EDIT_NODE_LABEL,\n      payload: {\n        id: index,\n        nodeLabel\n      }\n    });\n  };\n  const onRemoveNodeLabel = index => {\n    props.dispatch({\n      type: ACTIONS.REMOVE_NODE_LABEL,\n      payload: index\n    });\n  };\n  const onEditNodeLimit = limit => {\n    props.dispatch({\n      type: ACTIONS.SET_NODE_LIMIT,\n      payload: limit\n    });\n  };\n  const onRefresh = () => {\n    props.dispatch({\n      type: ACTIONS.REFRESH_NODE_LABELS,\n      payload: props.nodeLabels\n    });\n  };\n  // Use this model for features\n  // onTraverse(nodeId, direction) {\n  //   const query = `g.V('${nodeId}').${direction}()`;\n  //   axios.post(\n  //     QUERY_ENDPOINT,\n  //     { host: this.props.host, port: this.props.port, query: query, nodeLimit: this.props.nodeLimit },\n  //     { headers: { 'Content-Type': 'application/json' } }\n  //   ).then((response) => {\n  //     onFetchQuery(response, query, this.props.nodeLabels, this.props.dispatch);\n  //   }).catch((error) => {\n  //     this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n  //   });\n  // }\n\n  const onTogglePhysics = enabled => {\n    props.dispatch({\n      type: ACTIONS.SET_IS_PHYSICS_ENABLED,\n      payload: enabled\n    });\n    if (props.network) {\n      const edges = {\n        smooth: {\n          type: enabled ? 'dynamic' : 'continuous'\n        }\n      };\n      props.network.setOptions({\n        physics: enabled,\n        edges\n      });\n    }\n  };\n  const generateList = list => {\n    let key = 0;\n    return list.map(value => {\n      key = key + 1;\n      return React.cloneElement( /*#__PURE__*/React.createElement(ListItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        primary: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      })), {\n        key\n      });\n    });\n  };\n  const generateNodeLabelList = nodeLabels => {\n    let index = -1;\n    return nodeLabels.map(nodeLabel => {\n      index = index + 1;\n      nodeLabel.index = index;\n      return React.cloneElement( /*#__PURE__*/React.createElement(ListItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Node Type\",\n        InputLabelProps: {\n          shrink: true\n        },\n        value: nodeLabel.type,\n        onChange: event => {\n          const type = event.target.value;\n          const field = nodeLabel.field;\n          onEditNodeLabel(nodeLabel.index, {\n            type,\n            field\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: \"Label Field\",\n        InputLabelProps: {\n          shrink: true\n        },\n        value: nodeLabel.field,\n        onChange: event => {\n          const field = event.target.value;\n          const type = nodeLabel.type;\n          onEditNodeLabel(nodeLabel.index, {\n            type,\n            field\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"delete\",\n        size: \"small\",\n        onClick: () => onRemoveNodeLabel(nodeLabel.index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }))), {\n        key: index\n      });\n    });\n  };\n  let hasSelected = false;\n  let selectedType = null;\n  let selectedId = null;\n  let selectedProperties = null;\n  let selectedHeader = null;\n  if (!_.isEmpty(props.selectedNode)) {\n    hasSelected = true;\n    selectedType = _.get(props.selectedNode, 'type');\n    selectedId = _.get(props.selectedNode, 'id');\n    selectedProperties = _.get(props.selectedNode, 'properties');\n    console.log('These are the selected properties', selectedProperties);\n    stringifyObjectValues(selectedProperties);\n    selectedHeader = 'Node';\n  } else if (!_.isEmpty(props.selectedEdge)) {\n    hasSelected = true;\n    selectedType = _.get(props.selectedEdge, 'type');\n    selectedId = _.get(props.selectedEdge, 'id');\n    selectedProperties = _.get(props.selectedEdge, 'properties');\n    selectedHeader = 'Edge';\n    stringifyObjectValues(selectedProperties);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'details',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"Query History\")), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, generateList(props.queryHistory)))), /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \"Settings\")), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Automatically stabilize the graph\",\n    \"aria-label\": \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: \"Enable Physics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Number of maximum nodes which should return from the query. Empty or 0 has no restrictions.\",\n    \"aria-label\": \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Node Limit\",\n    type: \"Number\",\n    variant: \"outlined\",\n    value: props.nodeLimit,\n    onChange: event => {\n      const limit = event.target.value;\n      onEditNodeLimit(limit);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Node Labels\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, generateNodeLabelList(props.nodeLabels))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    variant: \"extended\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: onRefresh.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(RefreshIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }), \"Refresh\"), /*#__PURE__*/React.createElement(Fab, {\n    variant: \"extended\",\n    size: \"small\",\n    onClick: onAddNodeLabel.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 23\n    }\n  }), \"Add Node Label\")))))), hasSelected && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"Type: \", selectedHeader), selectedHeader === 'Node', /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple\",\n    table: true,\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    key: 'type',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 23\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 23\n    }\n  }, String(selectedType))), /*#__PURE__*/React.createElement(TableRow, {\n    key: 'id',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }, String(selectedId))))), /*#__PURE__*/React.createElement(JsonToTable, {\n    json: selectedProperties,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }))))));\n}\nexport const DetailsComponent = connect(state => {\n  return {\n    host: state.gremlin.host,\n    port: state.gremlin.port,\n    network: state.graph.network,\n    selectedNode: state.graph.selectedNode,\n    selectedEdge: state.graph.selectedEdge,\n    queryHistory: state.options.queryHistory,\n    nodeLabels: state.options.nodeLabels,\n    nodeLimit: state.options.nodeLimit,\n    isPhysicsEnabled: state.options.isPhysicsEnabled\n  };\n})(Details);","map":{"version":3,"names":["React","connect","Accordion","AccordionSummary","Typography","AccordionDetails","List","ListItem","ListItemText","TextField","Fab","IconButton","Grid","Table","TableBody","TableRow","TableCell","FormControlLabel","Switch","Divider","Tooltip","ExpandMoreIcon","AddIcon","DeleteIcon","RefreshIcon","_","JsonToTable","ACTIONS","COMMON_GREMLIN_ERROR","QUERY_ENDPOINT","axios","onFetchQuery","stringifyObjectValues","Details","props","onAddNodeLabel","dispatch","type","ADD_NODE_LABEL","onEditNodeLabel","index","nodeLabel","EDIT_NODE_LABEL","payload","id","onRemoveNodeLabel","REMOVE_NODE_LABEL","onEditNodeLimit","limit","SET_NODE_LIMIT","onRefresh","REFRESH_NODE_LABELS","nodeLabels","onTogglePhysics","enabled","SET_IS_PHYSICS_ENABLED","network","edges","smooth","setOptions","physics","generateList","list","key","map","value","cloneElement","generateNodeLabelList","shrink","event","target","field","hasSelected","selectedType","selectedId","selectedProperties","selectedHeader","isEmpty","selectedNode","get","console","log","selectedEdge","queryHistory","nodeLimit","bind","String","DetailsComponent","state","host","gremlin","port","graph","options","isPhysicsEnabled"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/components/Details/DetailsComponent.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Fab,\n  IconButton,\n  Grid,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  FormControlLabel,\n  Switch,\n  Divider,\n  Tooltip\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport _ from 'lodash';\nimport { JsonToTable } from 'react-json-to-table';\nimport { ACTIONS, COMMON_GREMLIN_ERROR, QUERY_ENDPOINT } from '../../constants';\nimport axios from \"axios\";\nimport { onFetchQuery} from '../../logics/actionHelper';\nimport { stringifyObjectValues} from '../../logics/utils';\n\nfunction Details (props) {\n\n  const onAddNodeLabel = () => {\n    props.dispatch({ type: ACTIONS.ADD_NODE_LABEL });\n  }\n\n  const onEditNodeLabel = (index, nodeLabel) => {\n    props.dispatch({ type: ACTIONS.EDIT_NODE_LABEL, payload: { id: index, nodeLabel } });\n  }\n\n  const onRemoveNodeLabel = (index) => {\n    props.dispatch({ type: ACTIONS.REMOVE_NODE_LABEL, payload: index });\n  }\n\n  const onEditNodeLimit = (limit) => {\n    props.dispatch({ type: ACTIONS.SET_NODE_LIMIT, payload: limit });\n  }\n\n  const onRefresh = () => {\n    props.dispatch({ type: ACTIONS.REFRESH_NODE_LABELS, payload: props.nodeLabels });\n  }\n  // Use this model for features\n  // onTraverse(nodeId, direction) {\n  //   const query = `g.V('${nodeId}').${direction}()`;\n  //   axios.post(\n  //     QUERY_ENDPOINT,\n  //     { host: this.props.host, port: this.props.port, query: query, nodeLimit: this.props.nodeLimit },\n  //     { headers: { 'Content-Type': 'application/json' } }\n  //   ).then((response) => {\n  //     onFetchQuery(response, query, this.props.nodeLabels, this.props.dispatch);\n  //   }).catch((error) => {\n  //     this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n  //   });\n  // }\n\n  const onTogglePhysics = (enabled) => {\n    props.dispatch({ type: ACTIONS.SET_IS_PHYSICS_ENABLED, payload: enabled });\n    if (props.network) {\n      const edges = {\n        smooth: {\n          type: enabled ? 'dynamic' : 'continuous'\n        }\n      };\n      props.network.setOptions( { physics: enabled, edges } );\n    }\n  }\n\n  const generateList = (list) => {\n    let key = 0;\n    return list.map(value => {\n      key = key+1;\n      return React.cloneElement((\n        <ListItem>\n          <ListItemText\n            primary={value}\n          />\n        </ListItem>\n      ), {\n        key\n      })\n    });\n  }\n\n  const generateNodeLabelList = (nodeLabels) => {\n    let index = -1;\n    return nodeLabels.map( nodeLabel => {\n      index = index+1;\n      nodeLabel.index = index;\n      return React.cloneElement((\n        <ListItem>\n          <TextField id=\"standard-basic\" label=\"Node Type\" InputLabelProps={{ shrink: true }} value={nodeLabel.type} onChange={event => {\n            const type = event.target.value;\n            const field = nodeLabel.field;\n            onEditNodeLabel(nodeLabel.index, { type, field })\n          }}\n          />\n          <TextField id=\"standard-basic\" label=\"Label Field\" InputLabelProps={{ shrink: true }} value={nodeLabel.field} onChange={event => {\n            const field = event.target.value;\n            const type = nodeLabel.type;\n            onEditNodeLabel(nodeLabel.index, { type, field })\n          }}/>\n          <IconButton aria-label=\"delete\" size=\"small\" onClick={() => onRemoveNodeLabel(nodeLabel.index)}>\n            <DeleteIcon fontSize=\"small\" />\n          </IconButton>\n        </ListItem>\n      ), {\n        key: index\n      })\n    });\n  }\n\n  \n    let hasSelected = false;\n    let selectedType = null;\n    let selectedId = null ;\n    let selectedProperties = null;\n    let selectedHeader = null;\n    if (!_.isEmpty(props.selectedNode)) {\n      hasSelected = true;\n      selectedType =  _.get(props.selectedNode, 'type');\n      selectedId = _.get(props.selectedNode, 'id');\n      selectedProperties = _.get(props.selectedNode, 'properties');\n      console.log('These are the selected properties', selectedProperties);\n      stringifyObjectValues(selectedProperties);\n      selectedHeader = 'Node';\n    } else if (!_.isEmpty(props.selectedEdge)) {\n      hasSelected = true;\n      selectedType =  _.get(props.selectedEdge, 'type');\n      selectedId = _.get(props.selectedEdge, 'id');\n      selectedProperties = _.get(props.selectedEdge, 'properties');\n      selectedHeader = 'Edge';\n      stringifyObjectValues(selectedProperties);\n    }\n\n\n    return (\n      <div className={'details'}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={12}>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography>Query History</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <List dense={true}>\n                  {generateList(props.queryHistory)}\n                </List>\n              </AccordionDetails>\n            </Accordion>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography>Settings</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Tooltip title=\"Automatically stabilize the graph\" aria-label=\"add\">\n                    <FormControlLabel\n                      label=\"Enable Physics\"\n                    />\n                    </Tooltip>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Tooltip title=\"Number of maximum nodes which should return from the query. Empty or 0 has no restrictions.\" aria-label=\"add\">\n                      <TextField label=\"Node Limit\" type=\"Number\" variant=\"outlined\" value={props.nodeLimit} onChange={event => {\n                        const limit = event.target.value;\n                        onEditNodeLimit(limit)\n                      }} />\n                    </Tooltip>\n\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Typography>Node Labels</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <List dense={true}>\n                      {generateNodeLabelList(props.nodeLabels)}\n                    </List>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={12}>\n                    <Fab variant=\"extended\" color=\"primary\" size=\"small\" onClick={onRefresh.bind(this)}>\n                      <RefreshIcon />\n                      Refresh\n                    </Fab>\n                    <Fab variant=\"extended\" size=\"small\" onClick={onAddNodeLabel.bind(this)}>\n                      <AddIcon />\n                      Add Node Label\n                    </Fab>\n                  </Grid>\n                </Grid>\n              </AccordionDetails>\n            </Accordion>\n          </Grid>\n          {hasSelected &&\n          <Grid item xs={12} sm={12} md={12}>\n            <h2>Type: {selectedHeader}</h2>\n            {selectedHeader === 'Node'}\n            <Grid item xs={12} sm={12} md={12}>\n              <Grid container>\n                <Table aria-label=\"simple\" table size= \"medium\" >\n                  <TableBody>\n                    <TableRow key={'type'}>\n                      <TableCell scope=\"row\">Type</TableCell>\n                      <TableCell align=\"left\">{String(selectedType)}</TableCell>\n                    </TableRow>\n                    <TableRow key={'id'}>\n                      <TableCell scope=\"row\">ID</TableCell>\n                      <TableCell align=\"left\">{String(selectedId)}</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n                <JsonToTable json={selectedProperties}/>\n              </Grid>\n            </Grid>\n          </Grid>\n          }\n        </Grid>\n      </div>\n    );\n  }\n\nexport const DetailsComponent = connect((state)=>{\n  return {\n    host: state.gremlin.host,\n    port: state.gremlin.port,\n    network: state.graph.network,\n    selectedNode: state.graph.selectedNode,\n    selectedEdge: state.graph.selectedEdge,\n    queryHistory: state.options.queryHistory,\n    nodeLabels: state.options.nodeLabels,\n    nodeLimit: state.options.nodeLimit,\n    isPhysicsEnabled: state.options.isPhysicsEnabled\n  };\n})(Details);"],"mappings":"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"},"metadata":{},"sourceType":"module"}