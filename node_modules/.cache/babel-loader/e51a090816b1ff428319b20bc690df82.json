{"ast":null,"code":"var _jsxFileName = \"/Users/eaolivar/git/gremlin-visualizer/src/components/Header/HeaderComponent.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport { ACTIONS, QUERY_ENDPOINT, COMMON_GREMLIN_ERROR } from '../../constants';\nimport { onFetchQuery } from '../../logics/actionHelper';\nclass Header extends React.Component {\n  clearGraph() {\n    this.props.dispatch({\n      type: ACTIONS.CLEAR_GRAPH\n    });\n    this.props.dispatch({\n      type: ACTIONS.CLEAR_QUERY_HISTORY\n    });\n  }\n  sendQuery() {\n    this.props.dispatch({\n      type: ACTIONS.SET_ERROR,\n      payload: null\n    });\n    axios.post(QUERY_ENDPOINT, {\n      host: this.props.host,\n      port: this.props.port,\n      query: this.props.query,\n      nodeLimit: this.props.nodeLimit\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      onFetchQuery(response, this.props.query, this.props.nodeLabels, this.props.dispatch);\n    }).catch(error => {\n      this.props.dispatch({\n        type: ACTIONS.SET_ERROR,\n        payload: COMMON_GREMLIN_ERROR\n      });\n    });\n  }\n  onHostChanged(host) {\n    this.props.dispatch({\n      type: ACTIONS.SET_HOST,\n      payload: host\n    });\n  }\n  onPortChanged(port) {\n    this.props.dispatch({\n      type: ACTIONS.SET_PORT,\n      payload: port\n    });\n  }\n  onQueryChanged(query) {\n    this.props.dispatch({\n      type: ACTIONS.SET_QUERY,\n      payload: query\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'header',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.props.host,\n      onChange: event => this.onHostChanged(event.target.value),\n      id: \"standard-basic\",\n      label: \"host\",\n      style: {\n        width: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      value: this.props.port,\n      onChange: event => this.onPortChanged(event.target.value),\n      id: \"standard-basic\",\n      label: \"port\",\n      style: {\n        width: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      value: this.props.query,\n      onChange: event => this.onQueryChanged(event.target.value),\n      id: \"standard-basic\",\n      label: \"gremlin query\",\n      style: {\n        width: '60%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.sendQuery.bind(this),\n      style: {\n        width: '150px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Execute\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: this.clearGraph.bind(this),\n      style: {\n        width: '150px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Clear Graph\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.props.error));\n  }\n}\nexport const HeaderComponent = connect(state => {\n  return {\n    host: state.gremlin.host,\n    port: state.gremlin.port,\n    query: state.gremlin.query,\n    error: state.gremlin.error,\n    nodes: state.graph.nodes,\n    edges: state.graph.edges,\n    nodeLabels: state.options.nodeLabels,\n    nodeLimit: state.options.nodeLimit\n  };\n})(Header);","map":{"version":3,"names":["React","connect","Button","TextField","axios","ACTIONS","QUERY_ENDPOINT","COMMON_GREMLIN_ERROR","onFetchQuery","Header","Component","clearGraph","props","dispatch","type","CLEAR_GRAPH","CLEAR_QUERY_HISTORY","sendQuery","SET_ERROR","payload","post","host","port","query","nodeLimit","headers","then","response","nodeLabels","catch","error","onHostChanged","SET_HOST","onPortChanged","SET_PORT","onQueryChanged","SET_QUERY","render","event","target","value","width","bind","color","HeaderComponent","state","gremlin","nodes","graph","edges","options"],"sources":["/Users/eaolivar/git/gremlin-visualizer/src/components/Header/HeaderComponent.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, TextField }  from '@material-ui/core';\nimport axios from 'axios';\nimport { ACTIONS, QUERY_ENDPOINT, COMMON_GREMLIN_ERROR } from '../../constants';\nimport { onFetchQuery } from '../../logics/actionHelper';\n\nclass Header extends React.Component {\n  clearGraph() {\n    this.props.dispatch({ type: ACTIONS.CLEAR_GRAPH });\n    this.props.dispatch({ type: ACTIONS.CLEAR_QUERY_HISTORY });\n  }\n\n  sendQuery() {\n    this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: null });\n    axios.post(\n      QUERY_ENDPOINT,\n      { host: this.props.host, port: this.props.port, query: this.props.query, nodeLimit: this.props.nodeLimit },\n      { headers: { 'Content-Type': 'application/json' } }\n    ).then((response) => {\n      onFetchQuery(response, this.props.query, this.props.nodeLabels, this.props.dispatch);\n    }).catch((error) => {\n      this.props.dispatch({ type: ACTIONS.SET_ERROR, payload: COMMON_GREMLIN_ERROR });\n    });\n  }\n\n  onHostChanged(host) {\n    this.props.dispatch({ type: ACTIONS.SET_HOST, payload: host });\n  }\n\n  onPortChanged(port) {\n    this.props.dispatch({ type: ACTIONS.SET_PORT, payload: port });\n  }\n\n  onQueryChanged(query) {\n    this.props.dispatch({ type: ACTIONS.SET_QUERY, payload: query });\n  }\n\n  render(){\n    return (\n      <div className={'header'}>\n        <form noValidate autoComplete=\"off\">\n          <TextField value={this.props.host} onChange={(event => this.onHostChanged(event.target.value))} id=\"standard-basic\" label=\"host\" style={{width: '10%'}} />\n          <TextField value={this.props.port} onChange={(event => this.onPortChanged(event.target.value))} id=\"standard-basic\" label=\"port\" style={{width: '10%'}} />\n          <TextField value={this.props.query} onChange={(event => this.onQueryChanged(event.target.value))} id=\"standard-basic\" label=\"gremlin query\" style={{width: '60%'}} />\n          <Button variant=\"contained\" color=\"primary\" onClick={this.sendQuery.bind(this)} style={{width: '150px'}} >Execute</Button>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={this.clearGraph.bind(this)} style={{width: '150px'}} >Clear Graph</Button>\n        </form>\n\n        <br />\n        <div style={{color: 'red'}}>{this.props.error}</div>\n      </div>\n\n    );\n  }\n}\n\nexport const HeaderComponent = connect((state)=>{\n  return {\n    host: state.gremlin.host,\n    port: state.gremlin.port,\n    query: state.gremlin.query,\n    error: state.gremlin.error,\n    nodes: state.graph.nodes,\n    edges: state.graph.edges,\n    nodeLabels: state.options.nodeLabels,\n    nodeLimit: state.options.nodeLimit\n  };\n})(Header);"],"mappings":"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"},"metadata":{},"sourceType":"module"}